import{r as nt,c as w,g as z,R as N,M as st,d as ot,C as at,S as A,n as rt}from"./index-04a97e2f.js";import{d as lt}from"./index-35edb170.js";import{y as U}from"./index-56badaec.js";import{u as ct}from"./util-f1a89f99.js";import{H as ut}from"./HTTPFileSystem-1abeeaf0.js";import{C as gt}from"./CollapsiblePanel-e994eb92.js";import{m as dt,W as ht,p as mt,g as ft,D as pt}from"./DrawingTool-66208c73.js";import{Z as yt}from"./ZoomButtons-bd69e1e7.js";import{D as vt,S as St}from"./deckgl-cd196378.js";import{c as xt}from"./index-8dab391b.js";import{A as bt}from"./arc-layer-d596671f.js";import{G as Ct,u as Dt,l as k,a as wt,i as At,h as Mt,b as _t,c as zt,M as Pt,U as B,_ as x,F as Lt,j as It,k as Tt,m as Ft,g as kt}from"./layer-c9eaa646.js";import{C as Et}from"./text-layer-caa19765.js";import"./path-layer-b6abcc3b.js";import"./extends-98964cd2.js";class Rt extends Ct{constructor(t){const{id:e=Dt("column-geometry")}=t,{indices:n,attributes:s}=Ht(t);super({...t,id:e,indices:n,attributes:s})}}function Ht(i){const{radius:t,height:e=1,nradial:n=10}=i;let{vertices:s}=i;s&&(k.assert(s.length>=n),s=s.flatMap(h=>[h[0],h[1]]),dt(s,ht.COUNTER_CLOCKWISE));const o=e>0,a=n+1,r=o?a*3+1:n,c=Math.PI*2/n,l=new Uint16Array(o?n*3*2:0),d=new Float32Array(r*3),u=new Float32Array(r*3);let g=0;if(o){for(let h=0;h<a;h++){const p=h*c,f=h%n,y=Math.sin(p),v=Math.cos(p);for(let S=0;S<2;S++)d[g+0]=s?s[f*2]:v*t,d[g+1]=s?s[f*2+1]:y*t,d[g+2]=(1/2-S)*e,u[g+0]=s?s[f*2]:v,u[g+1]=s?s[f*2+1]:y,g+=3}d[g+0]=d[g-3],d[g+1]=d[g-2],d[g+2]=d[g-1],g+=3}for(let h=o?0:1;h<a;h++){const p=Math.floor(h/2)*Math.sign(.5-h%2),f=p*c,y=(p+n)%n,v=Math.sin(f),S=Math.cos(f);d[g+0]=s?s[y*2]:S*t,d[g+1]=s?s[y*2+1]:v*t,d[g+2]=e/2,u[g+2]=1,g+=3}if(o){let h=0;for(let p=0;p<n;p++)l[h++]=p*2+0,l[h++]=p*2+2,l[h++]=p*2+0,l[h++]=p*2+1,l[h++]=p*2+1,l[h++]=p*2+3}return{indices:l,attributes:{POSITION:{size:3,value:d},NORMAL:{size:3,value:u}}}}const Ot=`#version 300 es

#define SHADER_NAME column-layer-vertex-shader

in vec3 positions;
in vec3 normals;

in vec3 instancePositions;
in float instanceElevations;
in vec3 instancePositions64Low;
in vec4 instanceFillColors;
in vec4 instanceLineColors;
in float instanceStrokeWidths;

in vec3 instancePickingColors;

// Custom uniforms
uniform float opacity;
uniform float radius;
uniform float angle;
uniform vec2 offset;
uniform bool extruded;
uniform bool stroked;
uniform bool isStroke;
uniform float coverage;
uniform float elevationScale;
uniform float edgeDistance;
uniform float widthScale;
uniform float widthMinPixels;
uniform float widthMaxPixels;
uniform int radiusUnits;
uniform int widthUnits;

// Result
out vec4 vColor;
#ifdef FLAT_SHADING
out vec4 position_commonspace;
#endif

void main(void) {
  geometry.worldPosition = instancePositions;

  vec4 color = isStroke ? instanceLineColors : instanceFillColors;
  // rotate primitive position and normal
  mat2 rotationMatrix = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));

  // calculate elevation, if 3d not enabled set to 0
  // cylindar gemoetry height are between -1.0 to 1.0, transform it to between 0, 1
  float elevation = 0.0;
  // calculate stroke offset
  float strokeOffsetRatio = 1.0;

  if (extruded) {
    elevation = instanceElevations * (positions.z + 1.0) / 2.0 * elevationScale;
  } else if (stroked) {
    float widthPixels = clamp(
      project_size_to_pixel(instanceStrokeWidths * widthScale, widthUnits),
      widthMinPixels, widthMaxPixels) / 2.0;
    float halfOffset = project_pixel_size(widthPixels) / project_size(edgeDistance * coverage * radius);
    if (isStroke) {
      strokeOffsetRatio -= sign(positions.z) * halfOffset;
    } else {
      strokeOffsetRatio -= halfOffset;
    }
  }

  // if alpha == 0.0 or z < 0.0, do not render element
  float shouldRender = float(color.a > 0.0 && instanceElevations >= 0.0);
  float dotRadius = radius * coverage * shouldRender;

  geometry.pickingColor = instancePickingColors;

  // project center of column
  vec3 centroidPosition = vec3(instancePositions.xy, instancePositions.z + elevation);
  vec3 centroidPosition64Low = instancePositions64Low;
  vec2 offset = (rotationMatrix * positions.xy * strokeOffsetRatio + offset) * dotRadius;
  if (radiusUnits == UNIT_METERS) {
    offset = project_size(offset);
  }
  vec3 pos = vec3(offset, 0.);
  DECKGL_FILTER_SIZE(pos, geometry);

  gl_Position = project_position_to_clipspace(centroidPosition, centroidPosition64Low, pos, geometry.position);
  geometry.normal = project_normal(vec3(rotationMatrix * normals.xy, normals.z));
  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);

  // Light calculations
  if (extruded && !isStroke) {
#ifdef FLAT_SHADING
    position_commonspace = geometry.position;
    vColor = vec4(color.rgb, color.a * opacity);
#else
    vec3 lightColor = lighting_getLightColor(color.rgb, project_uCameraPosition, geometry.position.xyz, geometry.normal);
    vColor = vec4(lightColor, color.a * opacity);
#endif
  } else {
    vColor = vec4(color.rgb, color.a * opacity);
  }
  DECKGL_FILTER_COLOR(vColor, geometry);
}
`,Vt=`#version 300 es
#define SHADER_NAME column-layer-fragment-shader

precision highp float;

uniform vec3 project_uCameraPosition;
uniform bool extruded;
uniform bool isStroke;

out vec4 fragColor;

in vec4 vColor;
#ifdef FLAT_SHADING
in vec4 position_commonspace;
#endif

void main(void) {
  fragColor = vColor;
#ifdef FLAT_SHADING
  if (extruded && !isStroke && !picking_uActive) {
    vec3 normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));
    fragColor.rgb = lighting_getLightColor(vColor.rgb, project_uCameraPosition, position_commonspace.xyz, normal);
  }
#endif
  DECKGL_FILTER_COLOR(fragColor, geometry);
}
`,F=[0,0,0,255],Nt={diskResolution:{type:"number",min:4,value:20},vertices:null,radius:{type:"number",min:0,value:1e3},angle:{type:"number",value:0},offset:{type:"array",value:[0,0]},coverage:{type:"number",min:0,max:1,value:1},elevationScale:{type:"number",min:0,value:1},radiusUnits:"meters",lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,extruded:!0,wireframe:!1,filled:!0,stroked:!1,getPosition:{type:"accessor",value:i=>i.position},getFillColor:{type:"accessor",value:F},getLineColor:{type:"accessor",value:F},getLineWidth:{type:"accessor",value:1},getElevation:{type:"accessor",value:1e3},material:!0,getColor:{deprecatedFor:["getFillColor","getLineColor"]}};class R extends wt{getShaders(){const{gl:t}=this.context,e=!At(t),n={},s=this.props.flatShading&&Mt(t,Lt.GLSL_DERIVATIVES);return s&&(n.FLAT_SHADING=1),super.getShaders({vs:Ot,fs:Vt,defines:n,transpileToGLSL100:e,modules:[_t,s?mt:ft,zt]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceElevations:{size:1,transition:!0,accessor:"getElevation"},instanceFillColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getFillColor",defaultValue:F},instanceLineColors:{size:this.props.colorFormat.length,type:5121,normalized:!0,transition:!0,accessor:"getLineColor",defaultValue:F},instanceStrokeWidths:{size:1,accessor:"getLineWidth",transition:!0}})}updateState(t){super.updateState(t);const{props:e,oldProps:n,changeFlags:s}=t,o=s.extensionsChanged||e.flatShading!==n.flatShading;if(o){var a;const{gl:r}=this.context;(a=this.state.model)===null||a===void 0||a.delete(),this.state.model=this._getModel(r),this.getAttributeManager().invalidateAll()}(o||e.diskResolution!==n.diskResolution||e.vertices!==n.vertices||(e.extruded||e.stroked)!==(n.extruded||n.stroked))&&this._updateGeometry(e)}getGeometry(t,e,n){const s=new Rt({radius:1,height:n?2:0,vertices:e,nradial:t});let o=0;if(e)for(let a=0;a<t;a++){const r=e[a],c=Math.sqrt(r[0]*r[0]+r[1]*r[1]);o+=c/t}else o=1;return this.setState({edgeDistance:Math.cos(Math.PI/t)*o}),s}_getModel(t){return new Pt(t,{...this.getShaders(),id:this.props.id,isInstanced:!0})}_updateGeometry({diskResolution:t,vertices:e,extruded:n,stroked:s}){const o=this.getGeometry(t,e,n||s);this.setState({fillVertexCount:o.attributes.POSITION.value.length/3,wireframeVertexCount:o.indices.value.length}),this.state.model.setProps({geometry:o})}draw({uniforms:t}){const{lineWidthUnits:e,lineWidthScale:n,lineWidthMinPixels:s,lineWidthMaxPixels:o,radiusUnits:a,elevationScale:r,extruded:c,filled:l,stroked:d,wireframe:u,offset:g,coverage:h,radius:p,angle:f}=this.props,{model:y,fillVertexCount:v,wireframeVertexCount:S,edgeDistance:b}=this.state;y.setUniforms(t).setUniforms({radius:p,angle:f/180*Math.PI,offset:g,extruded:c,stroked:d,coverage:h,elevationScale:r,edgeDistance:b,radiusUnits:B[a],widthUnits:B[e],widthScale:n,widthMinPixels:s,widthMaxPixels:o}),c&&u&&(y.setProps({isIndexed:!0}),y.setVertexCount(S).setDrawMode(1).setUniforms({isStroke:!0}).draw()),l&&(y.setProps({isIndexed:!1}),y.setVertexCount(v).setDrawMode(5).setUniforms({isStroke:!1}).draw()),!c&&d&&(y.setProps({isIndexed:!1}),y.setVertexCount(v*2/3).setDrawMode(5).setUniforms({isStroke:!0}).draw())}}x(R,"layerName","ColumnLayer");x(R,"defaultProps",Nt);function Ut(){return new Worker("/sandbox/assets/CsvGzipParser.worker-90787f59.js")}const M={SUM:1,MEAN:2,MIN:3,MAX:4};function X(i,t){return i+t}function Bt(i,t){return t>i?t:i}function $t(i,t){return t<i?t:i}function jt(i,t){if(Number.isFinite(t))return i.length?t:null;const e=i.map(t).filter(Number.isFinite);return e.length?e.reduce(X,0)/e.length:null}function Gt(i,t){if(Number.isFinite(t))return i.length?i.length*t:null;const e=i.map(t).filter(Number.isFinite);return e.length?e.reduce(X,0):null}function Wt(i,t){if(Number.isFinite(t))return i.length?t:null;const e=i.map(t).filter(Number.isFinite);return e.length?e.reduce(Bt,-1/0):null}function qt(i,t){if(Number.isFinite(t))return i.length?t:null;const e=i.map(t).filter(Number.isFinite);return e.length?e.reduce($t,1/0):null}function Yt(i,t,e){const n=M[i]||M.SUM;switch(t=Xt(t,e),n){case M.MIN:return s=>qt(s,t);case M.SUM:return s=>Gt(s,t);case M.MEAN:return s=>jt(s,t);case M.MAX:return s=>Wt(s,t);default:return null}}function Xt(i,t={}){return Number.isFinite(i)?i:e=>(t.index=e.index,i(e.source,t))}function Zt(i,t={}){return e=>(t.indices=e.map(n=>n.index),i(e.map(n=>n.source),t))}const Kt=[[255,255,178],[254,217,118],[254,178,76],[253,141,60],[240,59,32],[189,0,38]];function Qt(i,t){const e={};for(const n in i)t.includes(n)||(e[n]=i[n]);return e}class Z extends Et{constructor(...t){super(...t),x(this,"state",void 0)}initializeAggregationLayer(t){super.initializeState(this.context),this.setState({ignoreProps:Qt(this.constructor._propTypes,t.data.props),dimensions:t})}updateState(t){super.updateState(t);const{changeFlags:e}=t;if(e.extensionsChanged){const n=this.getShaders({});n&&n.defines&&(n.defines.NON_INSTANCED_MODEL=1),this.updateShaders(n)}this._updateAttributes()}updateAttributes(t){this.setState({changedAttributes:t})}getAttributes(){return this.getAttributeManager().getShaderAttributes()}getModuleSettings(){const{viewport:t,mousePosition:e,gl:n}=this.context;return Object.assign(Object.create(this.props),{viewport:t,mousePosition:e,pickingActive:0,devicePixelRatio:It(n)})}updateShaders(t){}isAggregationDirty(t,e={}){const{props:n,oldProps:s,changeFlags:o}=t,{compareAll:a=!1,dimension:r}=e,{ignoreProps:c}=this.state,{props:l,accessors:d=[]}=r,{updateTriggersChanged:u}=o;if(o.dataChanged)return!0;if(u){if(u.all)return!0;for(const g of d)if(u[g])return!0}if(a)return o.extensionsChanged?!0:Tt({oldProps:s,newProps:n,ignoreProps:c,propTypes:this.constructor._propTypes});for(const g of l)if(n[g]!==s[g])return!0;return!1}isAttributeChanged(t){const{changedAttributes:e}=this.state;return t?e&&e[t]!==void 0:!Jt(e)}_getAttributeManager(){return new Ft(this.context.gl,{id:this.props.id,stats:this.context.stats})}}x(Z,"layerName","AggregationLayer");function Jt(i){let t=!0;for(const e in i){t=!1;break}return t}function E(i,t,e){const n=e;return n.domain=()=>i,n.range=()=>t,n}function $(i,t){return E(i,t,n=>re(i,t,n))}function te(i,t){return E(i,t,n=>le(i,t,n))}function ee(i,t){const e=i.sort(K);let n=0;const s=Math.max(1,t.length),o=new Array(s-1);for(;++n<s;)o[n-1]=ie(e,n/s);const a=r=>se(o,t,r);return a.thresholds=()=>o,E(i,t,a)}function K(i,t){return i-t}function ie(i,t){const e=i.length;if(t<=0||e<2)return i[0];if(t>=1)return i[e-1];const n=(e-1)*t,s=Math.floor(n),o=i[s],a=i[s+1];return o+(a-o)*(n-s)}function ne(i,t){let e=0,n=i.length;for(;e<n;){const s=e+n>>>1;K(i[s],t)>0?n=s:e=s+1}return e}function se(i,t,e){return t[ne(i,e)]}function oe(i,t,e,n){const s="".concat(n);let o=t.get(s);return o===void 0&&(o=i.push(n),t.set(s,o)),e[(o-1)%e.length]}function ae(i,t){const e=new Map,n=[];for(const o of i){const a="".concat(o);e.has(a)||e.set(a,n.push(o))}return E(i,t,o=>oe(n,e,t,o))}function re(i,t,e){const n=i[1]-i[0];if(n<=0)return k.warn("quantizeScale: invalid domain, returning range[0]")(),t[0];const s=n/t.length,o=Math.floor((e-i[0])/s),a=Math.max(Math.min(o,t.length-1),0);return t[a]}function le(i,t,e){return(e-i[0])/(i[1]-i[0])*(t[1]-t[0])+t[0]}function Q(i){return i!=null}function ce(i){const t=[];return i.forEach(e=>{!t.includes(e)&&Q(e)&&t.push(e)}),t}function J(i,t){return(typeof t=="function"?i.map(t):i).filter(Q)}function ue(i,t){return J(i,t)}function ge(i,t){return ce(J(i,t))}function de(i,t,e){return Math.max(t,Math.min(e,i))}function he(i){switch(i){case"quantize":return $;case"linear":return te;case"quantile":return ee;case"ordinal":return ae;default:return $}}const tt=i=>i.length,me=3402823466e29,et=i=>i.points,it=i=>i.index,j=(i,t)=>i<t?-1:i>t?1:i>=t?0:NaN,fe={getValue:tt,getPoints:et,getIndex:it,filterData:null};class pe{constructor(t=[],e=fe){x(this,"maxCount",void 0),x(this,"maxValue",void 0),x(this,"minValue",void 0),x(this,"totalCount",void 0),x(this,"aggregatedBins",void 0),x(this,"sortedBins",void 0),x(this,"binMap",void 0),this.aggregatedBins=this.getAggregatedBins(t,e),this._updateMinMaxValues(),this.binMap=this.getBinMap()}getAggregatedBins(t,e){const{getValue:n=tt,getPoints:s=et,getIndex:o=it,filterData:a}=e,r=typeof a=="function",c=t.length,l=[];let d=0;for(let u=0;u<c;u++){const g=t[u],h=s(g),p=o(g),f=r?h.filter(a):h;g.filteredPoints=r?f:null;const y=f.length?n(f):null;y!=null&&(l[d]={i:Number.isFinite(p)?p:u,value:y,counts:f.length},d++)}return l}_percentileToIndex(t){const e=this.sortedBins.length;if(e<2)return[0,0];const[n,s]=t.map(r=>de(r,0,100)),o=Math.ceil(n/100*(e-1)),a=Math.floor(s/100*(e-1));return[o,a]}getBinMap(){const t={};for(const e of this.aggregatedBins)t[e.i]=e;return t}_updateMinMaxValues(){let t=0,e=0,n=me,s=0;for(const o of this.aggregatedBins)t=t>o.counts?t:o.counts,e=e>o.value?e:o.value,n=n<o.value?n:o.value,s+=o.counts;this.maxCount=t,this.maxValue=e,this.minValue=n,this.totalCount=s}getValueRange(t){if(this.sortedBins||(this.sortedBins=this.aggregatedBins.sort((s,o)=>j(s.value,o.value))),!this.sortedBins.length)return[];let e=0,n=this.sortedBins.length-1;if(Array.isArray(t)){const s=this._percentileToIndex(t);e=s[0],n=s[1]}return[this.sortedBins[e].value,this.sortedBins[n].value]}getValueDomainByScale(t,[e=0,n=100]=[]){if(this.sortedBins||(this.sortedBins=this.aggregatedBins.sort((o,a)=>j(o.value,a.value))),!this.sortedBins.length)return[];const s=this._percentileToIndex([e,n]);return this._getScaleDomain(t,s)}_getScaleDomain(t,[e,n]){const s=this.sortedBins;switch(t){case"quantize":case"linear":return[s[e].value,s[n].value];case"quantile":return ue(s.slice(e,n+1),o=>o.value);case"ordinal":return ge(s,o=>o.value);default:return[s[e].value,s[n].value]}}}function G(){}const W=["getBins","getDomain","getScaleFunc"],q=[{key:"fillColor",accessor:"getFillColor",pickingInfo:"colorValue",getBins:{triggers:{value:{prop:"getColorValue",updateTrigger:"getColorValue"},weight:{prop:"getColorWeight",updateTrigger:"getColorWeight"},aggregation:{prop:"colorAggregation"},filterData:{prop:"_filterData",updateTrigger:"_filterData"}}},getDomain:{triggers:{lowerPercentile:{prop:"lowerPercentile"},upperPercentile:{prop:"upperPercentile"},scaleType:{prop:"colorScaleType"}}},getScaleFunc:{triggers:{domain:{prop:"colorDomain"},range:{prop:"colorRange"}},onSet:{props:"onSetColorDomain"}},nullValue:[0,0,0,0]},{key:"elevation",accessor:"getElevation",pickingInfo:"elevationValue",getBins:{triggers:{value:{prop:"getElevationValue",updateTrigger:"getElevationValue"},weight:{prop:"getElevationWeight",updateTrigger:"getElevationWeight"},aggregation:{prop:"elevationAggregation"},filterData:{prop:"_filterData",updateTrigger:"_filterData"}}},getDomain:{triggers:{lowerPercentile:{prop:"elevationLowerPercentile"},upperPercentile:{prop:"elevationUpperPercentile"},scaleType:{prop:"elevationScaleType"}}},getScaleFunc:{triggers:{domain:{prop:"elevationDomain"},range:{prop:"elevationRange"}},onSet:{props:"onSetElevationDomain"}},nullValue:-1}],ye=i=>i.cellSize;class ve{constructor(t){this.state={layerData:{},dimensions:{}},this.changeFlags={},this.dimensionUpdaters={},this._getCellSize=t.getCellSize||ye,this._getAggregator=t.getAggregator,this._addDimension(t.dimensions||q)}static defaultDimensions(){return q}updateState(t,e){const{oldProps:n,props:s,changeFlags:o}=t;this.updateGetValueFuncs(n,s,o);const a=this.needsReProjectPoints(n,s,o);let r=!1;return o.dataChanged||a?(this.getAggregatedData(s,e),r=!0):((this.getDimensionChanges(n,s,o)||[]).forEach(l=>typeof l=="function"&&l()),r=!0),this.setState({aggregationDirty:r}),this.state}setState(t){this.state={...this.state,...t}}setDimensionState(t,e){this.setState({dimensions:{...this.state.dimensions,[t]:{...this.state.dimensions[t],...e}}})}normalizeResult(t={}){return t.hexagons?{data:t.hexagons,...t}:t.layerData?{data:t.layerData,...t}:t}getAggregatedData(t,e){const s=this._getAggregator(t)(t,e);this.setState({layerData:this.normalizeResult(s)}),this.changeFlags={layerData:!0},this.getSortedBins(t)}updateGetValueFuncs(t,e,n){for(const s in this.dimensionUpdaters){const{value:o,weight:a,aggregation:r}=this.dimensionUpdaters[s].getBins.triggers;let c=e[o.prop];this.needUpdateDimensionStep(this.dimensionUpdaters[s].getBins,t,e,n)&&(c?c=Zt(c,{data:e.data}):c=Yt(e[r.prop],e[a.prop],{data:e.data})),c&&this.setDimensionState(s,{getValue:c})}}needsReProjectPoints(t,e,n){return this._getCellSize(t)!==this._getCellSize(e)||this._getAggregator(t)!==this._getAggregator(e)||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged.getPosition)}addDimension(t){this._addDimension(t)}_addDimension(t=[]){t.forEach(e=>{const{key:n}=e;this.dimensionUpdaters[n]=this.getDimensionUpdaters(e),this.state.dimensions[n]={getValue:null,domain:null,sortedBins:null,scaleFunc:G}})}getDimensionUpdaters({key:t,accessor:e,pickingInfo:n,getBins:s,getDomain:o,getScaleFunc:a,nullValue:r}){return{key:t,accessor:e,pickingInfo:n,getBins:{updater:this.getDimensionSortedBins,...s},getDomain:{updater:this.getDimensionValueDomain,...o},getScaleFunc:{updater:this.getDimensionScale,...a},attributeAccessor:this.getSubLayerDimensionAttribute(t,r)}}needUpdateDimensionStep(t,e,n,s){return Object.values(t.triggers).some(o=>o.updateTrigger?s.dataChanged||s.updateTriggersChanged&&(s.updateTriggersChanged.all||s.updateTriggersChanged[o.updateTrigger]):e[o.prop]!==n[o.prop])}getDimensionChanges(t,e,n){const s=[];for(const o in this.dimensionUpdaters){const a=W.find(r=>this.needUpdateDimensionStep(this.dimensionUpdaters[o][r],t,e,n));a&&s.push(this.dimensionUpdaters[o][a].updater.bind(this,e,this.dimensionUpdaters[o]))}return s.length?s:null}getUpdateTriggers(t){const e=t.updateTriggers||{},n={};for(const s in this.dimensionUpdaters){const{accessor:o}=this.dimensionUpdaters[s];n[o]={},W.forEach(a=>{Object.values(this.dimensionUpdaters[s][a].triggers).forEach(({prop:r,updateTrigger:c})=>{if(c){const l=e[c];typeof l=="object"&&!Array.isArray(l)?Object.assign(n[o],l):l!==void 0&&(n[o][r]=l)}else n[o][r]=t[r]})})}return n}getSortedBins(t){for(const e in this.dimensionUpdaters)this.getDimensionSortedBins(t,this.dimensionUpdaters[e])}getDimensionSortedBins(t,e){const{key:n}=e,{getValue:s}=this.state.dimensions[n],o=new pe(this.state.layerData.data||[],{getValue:s,filterData:t._filterData});this.setDimensionState(n,{sortedBins:o}),this.getDimensionValueDomain(t,e)}getDimensionValueDomain(t,e){const{getDomain:n,key:s}=e,{triggers:{lowerPercentile:o,upperPercentile:a,scaleType:r}}=n,c=this.state.dimensions[s].sortedBins.getValueDomainByScale(t[r.prop],[t[o.prop],t[a.prop]]);this.setDimensionState(s,{valueDomain:c}),this.getDimensionScale(t,e)}getDimensionScale(t,e){const{key:n,getScaleFunc:s,getDomain:o}=e,{domain:a,range:r}=s.triggers,{scaleType:c}=o.triggers,{onSet:l}=s,d=t[r.prop],u=t[a.prop]||this.state.dimensions[n].valueDomain,h=he(c&&t[c.prop])(u,d);typeof l=="object"&&typeof t[l.props]=="function"&&t[l.props](h.domain()),this.setDimensionState(n,{scaleFunc:h})}getSubLayerDimensionAttribute(t,e){return n=>{const{sortedBins:s,scaleFunc:o}=this.state.dimensions[t],a=s.binMap[n.index];if(a&&a.counts===0)return e;const r=a&&a.value,c=o.domain();return r>=c[0]&&r<=c[c.length-1]?o(r):e}}getSubLayerAccessors(t){const e={};for(const n in this.dimensionUpdaters){const{accessor:s}=this.dimensionUpdaters[n];e[s]=this.getSubLayerDimensionAttribute(t,n)}return e}getPickingInfo({info:t}){const e=t.picked&&t.index>-1;let n=null;if(e){const s=this.state.layerData.data[t.index],o={};for(const a in this.dimensionUpdaters){const{pickingInfo:r}=this.dimensionUpdaters[a],{sortedBins:c}=this.state.dimensions[a],l=c.binMap[s.index]&&c.binMap[s.index].value;o[r]=l}n=Object.assign(o,s,{points:s.filteredPoints||s.points})}return t.picked=!!n,t.object=n,t}getAccessor(t){return this.dimensionUpdaters.hasOwnProperty(t)?this.dimensionUpdaters[t].attributeAccessor:G}}var _=Math.PI/3,Se=[0,_,2*_,3*_,4*_,5*_];function xe(i){return i[0]}function be(i){return i[1]}function Ce(){var i=0,t=0,e=1,n=1,s=xe,o=be,a,r,c;function l(u){var g={},h=[],p,f=u.length;for(p=0;p<f;++p)if(!(isNaN(v=+s.call(null,y=u[p],p,u))||isNaN(S=+o.call(null,y,p,u)))){var y,v,S,b=Math.round(S=S/c),C=Math.round(v=v/r-(b&1)/2),P=S-b;if(Math.abs(P)*3>1){var m=v-C,D=C+(v<C?-1:1)/2,L=b+(S<b?-1:1),T=v-D,O=S-L;m*m+P*P>T*T+O*O&&(C=D+(b&1?1:-1)/2,b=L)}var V=C+"-"+b,I=g[V];I?I.push(y):(h.push(I=g[V]=[y]),I.x=(C+(b&1)/2)*r,I.y=b*c)}return h}function d(u){var g=0,h=0;return Se.map(function(p){var f=Math.sin(p)*u,y=-Math.cos(p)*u,v=f-g,S=y-h;return g=f,h=y,[v,S]})}return l.hexagon=function(u){return"m"+d(u==null?a:+u).join("l")+"z"},l.centers=function(){for(var u=[],g=Math.round(t/c),h=Math.round(i/r),p=g*c;p<n+a;p+=c,++g)for(var f=h*r+(g&1)*r/2;f<e+r/2;f+=r)u.push([f,p]);return u},l.mesh=function(){var u=d(a).slice(0,4).join("l");return l.centers().map(function(g){return"M"+g+"m"+u}).join("")},l.x=function(u){return arguments.length?(s=u,l):s},l.y=function(u){return arguments.length?(o=u,l):o},l.radius=function(u){return arguments.length?(a=+u,r=a*2*Math.sin(_),c=a*1.5,l):a},l.size=function(u){return arguments.length?(i=t=0,e=+u[0],n=+u[1],l):[e-i,n-t]},l.extent=function(u){return arguments.length?(i=+u[0][0],t=+u[0][1],e=+u[1][0],n=+u[1][1],l):[[i,t],[e,n]]},l.radius(1)}function De(i,t){const{data:e,radius:n}=i,{viewport:s,attributes:o}=t,a=e.length?we(e,t):null,r=Ae(n,s,a),c=[],{iterable:l,objectInfo:d}=kt(e),u=o.positions.value,{size:g}=o.positions.getAccessor();for(const f of l){d.index++;const y=d.index*g,v=[u[y],u[y+1]];Number.isFinite(v[0])&&Number.isFinite(v[1])?c.push({screenCoord:s.projectFlat(v),source:f,index:d.index}):k.warn("HexagonLayer: invalid position")()}return{hexagons:Ce().radius(r).x(f=>f.screenCoord[0]).y(f=>f.screenCoord[1])(c).map((f,y)=>({position:s.unprojectFlat([f.x,f.y]),points:f,index:y})),radiusCommon:r}}function we(i,t){const{attributes:e}=t,n=e.positions.value,{size:s}=e.positions.getAccessor();let o=1/0,a=1/0,r=-1/0,c=-1/0,l;for(l=0;l<s*i.length;l+=s){const d=n[l],u=n[l+1];Number.isFinite(d)&&Number.isFinite(u)&&(o=Math.min(d,o),r=Math.max(d,r),a=Math.min(u,a),c=Math.max(u,c))}return[o,a,r,c].every(Number.isFinite)?[(o+r)/2,(a+c)/2]:null}function Ae(i,t,e){const{unitsPerMeter:n}=t.getDistanceScales(e);return i*n[0]}function Y(){}const Me={colorDomain:null,colorRange:Kt,getColorValue:{type:"accessor",value:null},getColorWeight:{type:"accessor",value:1},colorAggregation:"SUM",lowerPercentile:{type:"number",value:0,min:0,max:100},upperPercentile:{type:"number",value:100,min:0,max:100},colorScaleType:"quantize",onSetColorDomain:Y,elevationDomain:null,elevationRange:[0,1e3],getElevationValue:{type:"accessor",value:null},getElevationWeight:{type:"accessor",value:1},elevationAggregation:"SUM",elevationLowerPercentile:{type:"number",value:0,min:0,max:100},elevationUpperPercentile:{type:"number",value:100,min:0,max:100},elevationScale:{type:"number",min:0,value:1},elevationScaleType:"linear",onSetElevationDomain:Y,radius:{type:"number",value:1e3,min:1},coverage:{type:"number",min:0,max:1,value:1},extruded:!1,hexagonAggregator:De,getPosition:{type:"accessor",value:i=>i.position},material:!0,_filterData:{type:"function",value:null,optional:!0}};class H extends Z{constructor(...t){super(...t),x(this,"state",void 0)}initializeState(){const t=new ve({getAggregator:n=>n.hexagonAggregator,getCellSize:n=>n.radius});this.state={cpuAggregator:t,aggregatorState:t.state,vertices:null},this.getAttributeManager().add({positions:{size:3,type:5130,accessor:"getPosition"}})}updateState(t){if(super.updateState(t),t.changeFlags.propsOrDataChanged){const e=this.state.cpuAggregator.updateState(t,{viewport:this.context.viewport,attributes:this.getAttributes()});if(this.state.aggregatorState.layerData!==e.layerData){const{hexagonVertices:n}=e.layerData||{};this.setState({vertices:n&&this.convertLatLngToMeterOffset(n)})}this.setState({aggregatorState:e})}}convertLatLngToMeterOffset(t){const{viewport:e}=this.context;if(Array.isArray(t)&&t.length===6){const n=t[0],s=t[3],o=[(n[0]+s[0])/2,(n[1]+s[1])/2],a=e.projectFlat(o),{metersPerUnit:r}=e.getDistanceScales(o);return t.map(l=>{const d=e.projectFlat(l);return[(d[0]-a[0])*r[0],(d[1]-a[1])*r[1]]})}return k.error("HexagonLayer: hexagonVertices needs to be an array of 6 points")(),null}getPickingInfo({info:t}){return this.state.cpuAggregator.getPickingInfo({info:t})}_onGetSublayerColor(t){return this.state.cpuAggregator.getAccessor("fillColor")(t)}_onGetSublayerElevation(t){return this.state.cpuAggregator.getAccessor("elevation")(t)}_getSublayerUpdateTriggers(){return this.state.cpuAggregator.getUpdateTriggers(this.props)}renderLayers(){const{elevationScale:t,extruded:e,coverage:n,material:s,transitions:o}=this.props,{aggregatorState:a,vertices:r}=this.state,c=this.getSubLayerClass("hexagon-cell",R),l=this._getSublayerUpdateTriggers(),d=r?{vertices:r,radius:1}:{radius:a.layerData.radiusCommon||1,radiusUnits:"common",angle:90};return new c({...d,diskResolution:6,elevationScale:t,extruded:e,coverage:n,material:s,getFillColor:this._onGetSublayerColor.bind(this),getElevation:this._onGetSublayerElevation.bind(this),transitions:o&&{getFillColor:o.getColorValue||o.getColorWeight,getElevation:o.getElevationValue||o.getElevationWeight}},this.getSubLayerProps({id:"hexagon-cell",updateTriggers:l}),{data:a.layerData.data})}}x(H,"layerName","HexagonLayer");x(H,"defaultProps",Me);const _e={ambient:.64,diffuse:.6,shininess:32,specularColor:[51,51,51]},ze={zoom:10,longitude:13.45,latitude:52.5,pitch:0,bearing:0};function Pe({viewId:i=0,colorRamp:t="chlorophyll",coverage:e=.65,dark:n=!1,data:s={raw:new Float32Array(0),length:0},extrude:o=!0,highlights:a=[],mapIsIndependent:r=!1,maxHeight:c=200,metric:l="Count",radius:d=100,selectedHexStats:u={rows:0,numHexagons:0,selectedHexagonIds:[]},upperPercentile:g=100,onClick:h={}}){const[p,f]=nt.useState(ze);w[i]=m=>{f(m||z.state.viewState)};function y(m){m.latitude&&(m.center||(m.center=[0,0]),m.center[0]=m.longitude,m.center[1]=m.latitude,f(m),r||z.commit("setMapCamera",m))}const v=xt({colormap:t,nshades:10,format:"rba",alpha:1}).map(m=>[m[0],m[1],m[2]]);function S({object:m}){if(!m||!m.position||!m.position.length)return null;const D=m.position[1],L=m.position[0],T=m.points.length;return{html:`        <b>${a.length?"Count":l}: ${T} </b><br/>
        ${Number.isFinite(D)?D.toFixed(4):""} / ${Number.isFinite(L)?L.toFixed(4):""}
      `,style:n?{color:"#ccc",backgroundColor:"#2a3c4f"}:{color:"#223",backgroundColor:"white"}}}function b(m,D){h(m,D)}let C=null;a.length?C=a.map(m=>m[1]):s.length?C={length:s.length,attributes:{getPosition:{value:s.raw,size:2}}}:C=null;const P=[new bt({id:"arc-layer",data:a,getSourcePosition:m=>m[0],getTargetPosition:m=>m[1],pickable:!1,opacity:.4,getHeight:0,getWidth:1,getSourceColor:n?[144,96,128]:[192,192,240],getTargetColor:n?[144,96,128]:[192,192,240]}),new H({id:"hexlayer",data:C,getPosition:a.length?m=>m:null,colorRange:n?v.slice(1):v.reverse().slice(1),coverage:e,autoHighlight:!0,elevationRange:[0,c],elevationScale:s&&s.length?50:0,extruded:o,selectedHexStats:u,pickable:!0,opacity:.7,radius:d,upperPercentile:g,material:_e,transitions:{elevationScale:{type:"interpolation",duration:1e3},opacity:{type:"interpolation",duration:200}}})];return N.createElement(vt,{layers:P,controller:!0,useDevicePixels:!1,viewState:p,getTooltip:S,onClick:b,onViewStateChange:m=>y(m.viewState)},N.createElement(St,{mapStyle:z.getters.mapStyle,preventStyleDiffing:!0,mapboxApiAccessToken:st}))}const Le={messages:{en:{loading:"Loading data...",sorting:"Sorting into bins...",aggregate:"Summary",maxHeight:"3D Height",showDetails:"Show Details",selection:"Selection",areas:"Areas",count:"Count"},de:{loading:"Dateien laden...",sorting:"Sortieren...",aggregate:"Daten",maxHeight:"3-D Höhe",showDetails:"Details anzeigen",selection:"Ausgewählt",areas:"Orte",count:"Anzahl"}}},Ie=ot({name:"XyHexagonsPlugin",i18n:Le,components:{CollapsiblePanel:gt,DrawingTool:pt,XyHexDeckMap:Pe,ToggleButton:lt.ToggleButton,ZoomButtons:yt},props:{root:{type:String,required:!0},subfolder:{type:String,required:!0},yamlConfig:String,config:Object,thumbnail:Boolean},data:()=>{const i=["bathymetry","par","chlorophyll","magma"];return{id:`id-${Math.floor(1e12*Math.random())}`,standaloneYAMLconfig:{title:"",description:"",file:"",projection:"",thumbnail:"",aggregations:{},radius:250,maxHeight:0,center:null,zoom:9,mapIsIndependent:!1},YAMLrequirementsXY:{file:"",aggregations:{}},colorRamps:i,buttonColors:["#5E8AAE","#BF7230","#269367","#9C439C"],aggregations:{},columnLookup:[],gzipWorker:null,colorRamp:i[0],globalState:z.state,vizDetails:{title:"",description:"",file:"",projection:"",thumbnail:"",aggregations:{},radius:250,maxHeight:0,center:null,zoom:9},myState:{statusMessage:"",subfolder:"",yamlConfig:"",thumbnail:!1},rowCache:{},requests:{raw:new Float32Array(0),length:0},highlightedTrips:[],searchTerm:"",searchEnabled:!1,isLoaded:!1,activeAggregation:"",isHighlightingZone:!1,multiSelectedHexagons:{},thumbnailUrl:"url('assets/thumbnail.jpg') no-repeat;",hexStats:null,resizer:null}},computed:{fileApi(){return new ut(this.fileSystem,z)},fileSystem(){const i=this.$store.state.svnProjects.filter(t=>t.slug===this.root);if(i.length===0)throw console.log("no such project"),Error;return i[0]},urlThumbnail(){return this.thumbnailUrl},buttonLabel(){const[i,t]=this.activeAggregation.split("~");return this.aggregations[i][t].title},extrudeTowers(){return this.vizDetails.maxHeight>0},mapProps(){return{viewId:this.id,colorRamp:this.colorRamp,coverage:.65,dark:this.$store.state.isDarkMode,data:this.requests,extrude:this.extrudeTowers,highlights:this.highlightedTrips,mapIsIndependent:this.vizDetails.mapIsIndependent,maxHeight:this.vizDetails.maxHeight,metric:this.buttonLabel,radius:this.vizDetails.radius,selectedHexStats:this.hexStats,upperPercentile:100,onClick:this.handleClick}},textColor(){const i={text:"#3498db",bg:"#eeeef480"},t={text:"white",bg:"#181518aa"};return this.$store.state.colorScheme===at.DarkMode?t:i}},watch:{extrudeTowers(){this.extrudeTowers&&this.globalState.viewState.pitch==0&&z.commit("setMapCamera",Object.assign({},this.globalState.viewState,{pitch:10}))},"$store.state.viewState"(){this.vizDetails.mapIsIndependent||w[this.id]&&w[this.id]()}},methods:{handleClick(i,t){console.log({target:i,event:t}),i.layer?this.handleHexClick(i,t):this.handleEmptyClick()},handleEmptyClick(){this.flipViewToShowInvertedData({})},handleHexClick(i,t){var n;if(!t.srcEvent.shiftKey){this.multiSelectedHexagons={},this.hexStats=null,this.flipViewToShowInvertedData(i);return}const e=(n=i==null?void 0:i.object)==null?void 0:n.index;e!==void 0&&(e in this.multiSelectedHexagons?delete this.multiSelectedHexagons[e]:this.multiSelectedHexagons[e]=i.object.points,this.hexStats=this.selectedHexagonStatistics())},flipViewToShowInvertedData(i){this.isHighlightingZone?this.isHighlightingZone=!1:i.object?this.isHighlightingZone=!0:this.isHighlightingZone=!1;const t=this.activeAggregation.split("~");let e=0,n=0;if(!this.isHighlightingZone)this.hexStats=null,this.multiSelectedHexagons={},this.handleOrigDest(t[0],parseInt(t[1]));else{e=parseInt(t[1]),n=e%2?e-1:e+1;const s=`${t[0]}${e}`,o=this.rowCache[s],a=`${t[0]}${n}`,r=this.rowCache[a],c=[];for(const l of i.object.points){const d=l.index*2,u=[r.raw[d],r.raw[d+1]];c.push([[o.raw[d],o.raw[d+1]],u]),this.highlightedTrips=c}this.hexStats&&(this.hexStats.selectedHexagonIds=[]),this.multiSelectedHexagons={},this.colorRamp=this.colorRamps[n]}this.isHighlightingZone||(this.highlightedTrips=[])},async handleOrigDest(i,t){const e=i+t;this.hexStats=null,this.multiSelectedHexagons={},this.highlightedTrips=[],this.activeAggregation=`${i}~${t}`,this.requests=this.rowCache[e],this.colorRamp=this.colorRamps[t]},async solveProjection(){if(!this.thumbnail){console.log("WHAT PROJECTION:");try{const i=await this.fileApi.getFileText(this.myState.subfolder+"/"+this.myState.yamlConfig);this.vizDetails=U.parse(i)}catch(i){console.error(i)}}},async getVizDetails(){if(this.config){this.validateYAML(),this.vizDetails=Object.assign({},this.config),this.setRadiusAndHeight();return}new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig)?await this.loadStandaloneYAMLConfig():this.loadOutputTripsConfig()},loadOutputTripsConfig(){let i="EPSG:31468";this.myState.thumbnail||(i=prompt('Enter projection: e.g. "EPSG:31468"')||"EPSG:31468",parseInt(i,10)&&(i="EPSG:"+i)),this.vizDetails={title:"Output Trips",description:this.myState.yamlConfig,file:this.myState.yamlConfig,projection:i,aggregations:{"Trip Summary":[{title:"Origins",x:"start_x",y:"start_y"},{title:"Destinations",x:"end_x",y:"end_y"}]},radius:this.vizDetails.radius,maxHeight:this.vizDetails.maxHeight,center:this.vizDetails.center,zoom:this.vizDetails.zoom},this.$emit("title",this.vizDetails.title)},setRadiusAndHeight(){this.vizDetails.radius||(this.vizDetails.radius=250),this.vizDetails.maxHeight||(this.vizDetails.maxHeight=0)},async loadStandaloneYAMLConfig(){try{const i=this.myState.yamlConfig.indexOf("/")>-1?this.myState.yamlConfig:this.myState.subfolder+"/"+this.myState.yamlConfig,t=await this.fileApi.getFileText(i);this.standaloneYAMLconfig=Object.assign({},U.parse(t)),this.validateYAML(),this.setVizDetails()}catch{console.log("failed"),this.$store.commit("setStatus",{type:A.ERROR,msg:"File not found",desc:`Could not find: ${this.myState.subfolder}/${this.myState.yamlConfig}`})}},validateYAML(){console.log("in yaml validation 2");const i=new RegExp(".*(yml|yaml)$").test(this.myState.yamlConfig);let t={};i?(console.log("has yaml"),t=this.standaloneYAMLconfig):(console.log("no yaml"),t=this.config);for(const e in this.YAMLrequirementsXY)e in t||this.$store.commit("setStatus",{type:A.ERROR,msg:`${this.yamlConfig}: missing required key: ${e}`,desc:"Check this.YAMLrequirementsXY for required keys"});t.radius==0&&this.$store.commit("setStatus",{type:A.WARNING,msg:"Radius set to zero",desc:"Radius can not be zero, preset value used instead. "}),(t.zoom<5||t.zoom>20)&&this.$store.commit("setStatus",{type:A.WARNING,msg:"Zoom is out of the recommended range ",desc:"Zoom levels should be between 5 and 20. "})},setVizDetails(){this.vizDetails=Object.assign({},this.vizDetails,this.standaloneYAMLconfig),this.setRadiusAndHeight();const i=this.vizDetails.title?this.vizDetails.title:"Hex Aggregation";this.$emit("title",i)},async buildThumbnail(){if(this.thumbnail&&this.vizDetails.thumbnail)try{const t=await(await this.fileApi.getFileBlob(this.myState.subfolder+"/"+this.vizDetails.thumbnail)).arrayBuffer(),e=ct.arrayBufferToBase64(t);e&&(this.thumbnailUrl=`center / cover no-repeat url(data:image/png;base64,${e})`)}catch(i){console.error(i)}},handleShowSelectionButton(){const i=Object.values(this.multiSelectedHexagons);let t=[];i.map(n=>t=t.concat(n));const e={object:{points:t}};this.flipViewToShowInvertedData(e)},selectedHexagonStatistics(){const i=Object.keys(this.multiSelectedHexagons).map(n=>parseInt(n));return i.length?{rows:Object.values(this.multiSelectedHexagons).reduce((n,s)=>n+s.length,0),numHexagons:i.length,selectedHexagonIds:i}:null},async setMapCenter(){const i=Object.values(this.rowCache)[0].raw;if(this.vizDetails.center){typeof this.vizDetails.center=="string"&&(this.vizDetails.center=this.vizDetails.center.split(",").map(Number));const r={longitude:this.vizDetails.center[0],latitude:this.vizDetails.center[1],bearing:0,pitch:0,zoom:this.vizDetails.zoom||10,jump:!1};w[this.id]&&w[this.id](r),this.$store.commit("setMapCamera",Object.assign({},r));return}if(!i.length)return;let t=0,e=0,n=0;const s=i.length/2,o=512;for(let r=0;r<s;r+=o)e+=i[r*2],n+=i[r*2+1],t++;e=e/t,n=n/t;const a=this.$store.state.viewState;e&&n&&this.$store.commit("setMapCamera",{longitude:e,latitude:n,bearing:a.bearing,pitch:a.pitch,zoom:this.vizDetails.zoom||a.zoom,jump:!1})},setupLogoMover(){this.resizer=new ResizeObserver(this.moveLogo);const i=document.getElementById(`id-${this.id}`);this.resizer.observe(i)},moveLogo(){const i=document.getElementById(`id-${this.id}`),t=i==null?void 0:i.querySelector(".mapboxgl-ctrl-bottom-left");if(t){const e=i.clientWidth>640?"280px":"36px";t.style.right=e}},async parseCSVFile(i){this.myState.statusMessage="Loading file...",this.gzipWorker=new Ut,this.gzipWorker.onmessage=async t=>{if(t.data.status)this.myState.statusMessage=t.data.status;else if(t.data.error)this.myState.statusMessage=t.data.error,this.$store.commit("setStatus",{type:A.ERROR,msg:"Loading Error",desc:"Error loading: ${this.myState.subfolder}/${this.vizDetails.file}"});else{const{rowCache:e,columnLookup:n}=t.data;this.gzipWorker&&this.gzipWorker.terminate(),this.dataIsLoaded({rowCache:e,columnLookup:n})}},this.gzipWorker.postMessage({filepath:i,fileSystem:this.fileSystem,aggregations:this.vizDetails.aggregations,projection:this.vizDetails.projection})},dataIsLoaded({rowCache:i,columnLookup:t}){this.columnLookup=t,this.rowCache=i;const e=this.activeAggregation.replaceAll("~","");this.requests=this.rowCache[e],this.setMapCenter(),this.moveLogo(),this.myState.statusMessage=""},async loadFiles(){let i=[];if(!this.fileApi)return{dataArray:i};try{let t=`${this.myState.subfolder}/${this.vizDetails.file}`;await this.parseCSVFile(t)}catch(t){console.error(t),this.myState.statusMessage=""+t,this.$store.commit("setStatus",{type:A.ERROR,msg:"Loading/Parsing Error",desc:"Error loading/parsing: ${this.myState.subfolder}/${this.vizDetails.file}"})}}},async mounted(){this.$store.commit("setFullScreen",!this.thumbnail),this.myState.thumbnail=this.thumbnail,this.myState.yamlConfig=this.yamlConfig||"",this.myState.subfolder=this.subfolder,await this.getVizDetails(),!this.thumbnail&&(this.setupLogoMover(),this.myState.statusMessage=`${this.$i18n.t("loading")}`,this.aggregations=this.vizDetails.aggregations,await this.loadFiles(),this.buildThumbnail(),this.isLoaded=!0,this.handleOrigDest(Object.keys(this.aggregations)[0],0))},beforeDestroy(){w[this.id]=void 0,delete w[this.id];try{this.gzipWorker&&this.gzipWorker.terminate()}catch(i){console.warn(i)}this.$store.commit("setFullScreen",!1)}});var Te=function(){var t=this,e=t._self._c;return t._self._setupProxy,e("div",{staticClass:"xy-hexagons",class:{"hide-thumbnail":!t.thumbnail},attrs:{oncontextmenu:"return false",id:`id-${t.id}`}},[!t.thumbnail&&t.isLoaded?e("xy-hex-deck-map",t._b({staticClass:"hex-layer"},"xy-hex-deck-map",t.mapProps,!1)):t._e(),t.thumbnail?t._e():e("zoom-buttons"),t.isLoaded&&!t.thumbnail&&t.vizDetails.title?e("div",{staticClass:"left-side"},[e("collapsible-panel",{attrs:{direction:"left",locked:!0}},[t.hexStats?e("div",{staticClass:"panel-items",staticStyle:{color:"#c0f"}},[e("p",{staticClass:"big",staticStyle:{"margin-top":"2rem"}},[t._v(t._s(t.$t("selection"))+":")]),e("h3",{staticStyle:{"margin-top":"-1rem"}},[t._v(t._s(t.$t("areas"))+": "+t._s(t.hexStats.numHexagons)+", "+t._s(t.$t("count"))+": "+t._s(t.hexStats.rows))]),e("button",{staticClass:"button",staticStyle:{color:"#c0f","border-color":"#c0f"},on:{click:t.handleShowSelectionButton}},[t._v(t._s(t.$t("showDetails")))])]):t._e()])],1):t._e(),t.isLoaded&&!t.thumbnail&&!t.myState.statusMessage?e("div",{staticClass:"control-panel"},[t._l(Object.keys(t.aggregations),function(n){return e("div",{key:n,staticClass:"panel-item"},[e("p",{staticClass:"ui-label"},[t._v(t._s(n))]),t._l(t.aggregations[n],function(s,o){return e("button",{key:o,staticClass:"button is-small aggregation-button",style:{"margin-bottom":"0.25rem",color:t.activeAggregation===`${n}~${o}`?"white":t.buttonColors[o],border:`1px solid ${t.buttonColors[o]}`,"border-right":`0.4rem solid ${t.buttonColors[o]}`,"border-radius":"4px","background-color":t.activeAggregation===`${n}~${o}`?t.buttonColors[o]:t.$store.state.isDarkMode?"#333":"white"},on:{click:function(a){return t.handleOrigDest(n,o)}}},[t._v(t._s(s.title))])})],2)}),e("div",{staticClass:"panel-item"},[e("p",{staticClass:"ui-label"},[t._v(t._s(t.$t("maxHeight"))+": "+t._s(t.vizDetails.maxHeight))]),e("b-slider",{staticClass:"ui-slider",attrs:{size:"is-small",min:0,max:250,step:5,duration:0,dotSize:12,tooltip:!1},model:{value:t.vizDetails.maxHeight,callback:function(n){t.$set(t.vizDetails,"maxHeight",n)},expression:"vizDetails.maxHeight"}}),e("p",{staticClass:"ui-label"},[t._v("Hex Radius: "+t._s(t.vizDetails.radius))]),e("b-slider",{staticClass:"ui-slider",attrs:{size:"is-small",min:50,max:1e3,step:5,duration:0,dotSize:12,tooltip:!1},model:{value:t.vizDetails.radius,callback:function(n){t.$set(t.vizDetails,"radius",n)},expression:"vizDetails.radius"}})],1)],2):t._e(),!t.thumbnail&&t.myState.statusMessage?e("div",{staticClass:"message"},[e("p",{staticClass:"status-message"},[t._v(t._s(t.myState.statusMessage))])]):t._e()],1)},Fe=[];var ke=rt(Ie,Te,Fe,!1,null,"09d0e405",null,null);const Ze=ke.exports;export{Ze as default};
//# sourceMappingURL=XyHexagons-a2cddf28.js.map
