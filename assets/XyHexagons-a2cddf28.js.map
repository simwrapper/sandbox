{"version":3,"file":"XyHexagons-a2cddf28.js","sources":["../../node_modules/@deck.gl/layers/dist/esm/column-layer/column-geometry.js","../../node_modules/@deck.gl/layers/dist/esm/column-layer/column-layer-vertex.glsl.js","../../node_modules/@deck.gl/layers/dist/esm/column-layer/column-layer-fragment.glsl.js","../../node_modules/@deck.gl/layers/dist/esm/column-layer/column-layer.js","../../node_modules/@deck.gl/aggregation-layers/dist/esm/utils/aggregation-operation-utils.js","../../node_modules/@deck.gl/aggregation-layers/dist/esm/utils/color-utils.js","../../node_modules/@deck.gl/aggregation-layers/dist/esm/utils/prop-utils.js","../../node_modules/@deck.gl/aggregation-layers/dist/esm/aggregation-layer.js","../../node_modules/@deck.gl/aggregation-layers/dist/esm/utils/scale-utils.js","../../node_modules/@deck.gl/aggregation-layers/dist/esm/utils/bin-sorter.js","../../node_modules/@deck.gl/aggregation-layers/dist/esm/utils/cpu-aggregator.js","../../node_modules/d3-hexbin/src/hexbin.js","../../node_modules/@deck.gl/aggregation-layers/dist/esm/hexagon-layer/hexagon-aggregator.js","../../node_modules/@deck.gl/aggregation-layers/dist/esm/hexagon-layer/hexagon-layer.js","../../src/plugins/xy-hexagons/XyHexLayer.tsx","../../src/plugins/xy-hexagons/XyHexagons.vue"],"sourcesContent":["import { log } from '@deck.gl/core';\nimport { Geometry, uid } from '@luma.gl/core';\nimport { modifyPolygonWindingDirection, WINDING } from '@math.gl/polygon';\nexport default class ColumnGeometry extends Geometry {\n  constructor(props) {\n    const {\n      id = uid('column-geometry')\n    } = props;\n    const {\n      indices,\n      attributes\n    } = tesselateColumn(props);\n    super({ ...props,\n      id,\n      indices,\n      attributes\n    });\n  }\n\n}\n\nfunction tesselateColumn(props) {\n  const {\n    radius,\n    height = 1,\n    nradial = 10\n  } = props;\n  let {\n    vertices\n  } = props;\n\n  if (vertices) {\n    log.assert(vertices.length >= nradial);\n    vertices = vertices.flatMap(v => [v[0], v[1]]);\n    modifyPolygonWindingDirection(vertices, WINDING.COUNTER_CLOCKWISE);\n  }\n\n  const isExtruded = height > 0;\n  const vertsAroundEdge = nradial + 1;\n  const numVertices = isExtruded ? vertsAroundEdge * 3 + 1 : nradial;\n  const stepAngle = Math.PI * 2 / nradial;\n  const indices = new Uint16Array(isExtruded ? nradial * 3 * 2 : 0);\n  const positions = new Float32Array(numVertices * 3);\n  const normals = new Float32Array(numVertices * 3);\n  let i = 0;\n\n  if (isExtruded) {\n    for (let j = 0; j < vertsAroundEdge; j++) {\n      const a = j * stepAngle;\n      const vertexIndex = j % nradial;\n      const sin = Math.sin(a);\n      const cos = Math.cos(a);\n\n      for (let k = 0; k < 2; k++) {\n        positions[i + 0] = vertices ? vertices[vertexIndex * 2] : cos * radius;\n        positions[i + 1] = vertices ? vertices[vertexIndex * 2 + 1] : sin * radius;\n        positions[i + 2] = (1 / 2 - k) * height;\n        normals[i + 0] = vertices ? vertices[vertexIndex * 2] : cos;\n        normals[i + 1] = vertices ? vertices[vertexIndex * 2 + 1] : sin;\n        i += 3;\n      }\n    }\n\n    positions[i + 0] = positions[i - 3];\n    positions[i + 1] = positions[i - 2];\n    positions[i + 2] = positions[i - 1];\n    i += 3;\n  }\n\n  for (let j = isExtruded ? 0 : 1; j < vertsAroundEdge; j++) {\n    const v = Math.floor(j / 2) * Math.sign(0.5 - j % 2);\n    const a = v * stepAngle;\n    const vertexIndex = (v + nradial) % nradial;\n    const sin = Math.sin(a);\n    const cos = Math.cos(a);\n    positions[i + 0] = vertices ? vertices[vertexIndex * 2] : cos * radius;\n    positions[i + 1] = vertices ? vertices[vertexIndex * 2 + 1] : sin * radius;\n    positions[i + 2] = height / 2;\n    normals[i + 2] = 1;\n    i += 3;\n  }\n\n  if (isExtruded) {\n    let index = 0;\n\n    for (let j = 0; j < nradial; j++) {\n      indices[index++] = j * 2 + 0;\n      indices[index++] = j * 2 + 2;\n      indices[index++] = j * 2 + 0;\n      indices[index++] = j * 2 + 1;\n      indices[index++] = j * 2 + 1;\n      indices[index++] = j * 2 + 3;\n    }\n  }\n\n  return {\n    indices,\n    attributes: {\n      POSITION: {\n        size: 3,\n        value: positions\n      },\n      NORMAL: {\n        size: 3,\n        value: normals\n      }\n    }\n  };\n}\n//# sourceMappingURL=column-geometry.js.map","export default \"#version 300 es\\n\\n#define SHADER_NAME column-layer-vertex-shader\\n\\nin vec3 positions;\\nin vec3 normals;\\n\\nin vec3 instancePositions;\\nin float instanceElevations;\\nin vec3 instancePositions64Low;\\nin vec4 instanceFillColors;\\nin vec4 instanceLineColors;\\nin float instanceStrokeWidths;\\n\\nin vec3 instancePickingColors;\\n\\n// Custom uniforms\\nuniform float opacity;\\nuniform float radius;\\nuniform float angle;\\nuniform vec2 offset;\\nuniform bool extruded;\\nuniform bool stroked;\\nuniform bool isStroke;\\nuniform float coverage;\\nuniform float elevationScale;\\nuniform float edgeDistance;\\nuniform float widthScale;\\nuniform float widthMinPixels;\\nuniform float widthMaxPixels;\\nuniform int radiusUnits;\\nuniform int widthUnits;\\n\\n// Result\\nout vec4 vColor;\\n#ifdef FLAT_SHADING\\nout vec4 position_commonspace;\\n#endif\\n\\nvoid main(void) {\\n  geometry.worldPosition = instancePositions;\\n\\n  vec4 color = isStroke ? instanceLineColors : instanceFillColors;\\n  // rotate primitive position and normal\\n  mat2 rotationMatrix = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\\n\\n  // calculate elevation, if 3d not enabled set to 0\\n  // cylindar gemoetry height are between -1.0 to 1.0, transform it to between 0, 1\\n  float elevation = 0.0;\\n  // calculate stroke offset\\n  float strokeOffsetRatio = 1.0;\\n\\n  if (extruded) {\\n    elevation = instanceElevations * (positions.z + 1.0) / 2.0 * elevationScale;\\n  } else if (stroked) {\\n    float widthPixels = clamp(\\n      project_size_to_pixel(instanceStrokeWidths * widthScale, widthUnits),\\n      widthMinPixels, widthMaxPixels) / 2.0;\\n    float halfOffset = project_pixel_size(widthPixels) / project_size(edgeDistance * coverage * radius);\\n    if (isStroke) {\\n      strokeOffsetRatio -= sign(positions.z) * halfOffset;\\n    } else {\\n      strokeOffsetRatio -= halfOffset;\\n    }\\n  }\\n\\n  // if alpha == 0.0 or z < 0.0, do not render element\\n  float shouldRender = float(color.a > 0.0 && instanceElevations >= 0.0);\\n  float dotRadius = radius * coverage * shouldRender;\\n\\n  geometry.pickingColor = instancePickingColors;\\n\\n  // project center of column\\n  vec3 centroidPosition = vec3(instancePositions.xy, instancePositions.z + elevation);\\n  vec3 centroidPosition64Low = instancePositions64Low;\\n  vec2 offset = (rotationMatrix * positions.xy * strokeOffsetRatio + offset) * dotRadius;\\n  if (radiusUnits == UNIT_METERS) {\\n    offset = project_size(offset);\\n  }\\n  vec3 pos = vec3(offset, 0.);\\n  DECKGL_FILTER_SIZE(pos, geometry);\\n\\n  gl_Position = project_position_to_clipspace(centroidPosition, centroidPosition64Low, pos, geometry.position);\\n  geometry.normal = project_normal(vec3(rotationMatrix * normals.xy, normals.z));\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n\\n  // Light calculations\\n  if (extruded && !isStroke) {\\n#ifdef FLAT_SHADING\\n    position_commonspace = geometry.position;\\n    vColor = vec4(color.rgb, color.a * opacity);\\n#else\\n    vec3 lightColor = lighting_getLightColor(color.rgb, project_uCameraPosition, geometry.position.xyz, geometry.normal);\\n    vColor = vec4(lightColor, color.a * opacity);\\n#endif\\n  } else {\\n    vColor = vec4(color.rgb, color.a * opacity);\\n  }\\n  DECKGL_FILTER_COLOR(vColor, geometry);\\n}\\n\";\n//# sourceMappingURL=column-layer-vertex.glsl.js.map","export default \"#version 300 es\\n#define SHADER_NAME column-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform vec3 project_uCameraPosition;\\nuniform bool extruded;\\nuniform bool isStroke;\\n\\nout vec4 fragColor;\\n\\nin vec4 vColor;\\n#ifdef FLAT_SHADING\\nin vec4 position_commonspace;\\n#endif\\n\\nvoid main(void) {\\n  fragColor = vColor;\\n#ifdef FLAT_SHADING\\n  if (extruded && !isStroke && !picking_uActive) {\\n    vec3 normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\\n    fragColor.rgb = lighting_getLightColor(vColor.rgb, project_uCameraPosition, position_commonspace.xyz, normal);\\n  }\\n#endif\\n  DECKGL_FILTER_COLOR(fragColor, geometry);\\n}\\n\";\n//# sourceMappingURL=column-layer-fragment.glsl.js.map","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Layer, project32, gouraudLighting, phongLighting, picking, UNIT } from '@deck.gl/core';\nimport { Model, isWebGL2, hasFeature, FEATURES } from '@luma.gl/core';\nimport ColumnGeometry from './column-geometry';\nimport vs from './column-layer-vertex.glsl';\nimport fs from './column-layer-fragment.glsl';\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  diskResolution: {\n    type: 'number',\n    min: 4,\n    value: 20\n  },\n  vertices: null,\n  radius: {\n    type: 'number',\n    min: 0,\n    value: 1000\n  },\n  angle: {\n    type: 'number',\n    value: 0\n  },\n  offset: {\n    type: 'array',\n    value: [0, 0]\n  },\n  coverage: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    value: 1\n  },\n  elevationScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  radiusUnits: 'meters',\n  lineWidthUnits: 'meters',\n  lineWidthScale: 1,\n  lineWidthMinPixels: 0,\n  lineWidthMaxPixels: Number.MAX_SAFE_INTEGER,\n  extruded: true,\n  wireframe: false,\n  filled: true,\n  stroked: false,\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  getElevation: {\n    type: 'accessor',\n    value: 1000\n  },\n  material: true,\n  getColor: {\n    deprecatedFor: ['getFillColor', 'getLineColor']\n  }\n};\nexport default class ColumnLayer extends Layer {\n  getShaders() {\n    const {\n      gl\n    } = this.context;\n    const transpileToGLSL100 = !isWebGL2(gl);\n    const defines = {};\n    const useDerivatives = this.props.flatShading && hasFeature(gl, FEATURES.GLSL_DERIVATIVES);\n\n    if (useDerivatives) {\n      defines.FLAT_SHADING = 1;\n    }\n\n    return super.getShaders({\n      vs,\n      fs,\n      defines,\n      transpileToGLSL100,\n      modules: [project32, useDerivatives ? phongLighting : gouraudLighting, picking]\n    });\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceElevations: {\n        size: 1,\n        transition: true,\n        accessor: 'getElevation'\n      },\n      instanceFillColors: {\n        size: this.props.colorFormat.length,\n        type: 5121,\n        normalized: true,\n        transition: true,\n        accessor: 'getFillColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceLineColors: {\n        size: this.props.colorFormat.length,\n        type: 5121,\n        normalized: true,\n        transition: true,\n        accessor: 'getLineColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceStrokeWidths: {\n        size: 1,\n        accessor: 'getLineWidth',\n        transition: true\n      }\n    });\n  }\n\n  updateState(params) {\n    super.updateState(params);\n    const {\n      props,\n      oldProps,\n      changeFlags\n    } = params;\n    const regenerateModels = changeFlags.extensionsChanged || props.flatShading !== oldProps.flatShading;\n\n    if (regenerateModels) {\n      var _this$state$model;\n\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager().invalidateAll();\n    }\n\n    if (regenerateModels || props.diskResolution !== oldProps.diskResolution || props.vertices !== oldProps.vertices || (props.extruded || props.stroked) !== (oldProps.extruded || oldProps.stroked)) {\n      this._updateGeometry(props);\n    }\n  }\n\n  getGeometry(diskResolution, vertices, hasThinkness) {\n    const geometry = new ColumnGeometry({\n      radius: 1,\n      height: hasThinkness ? 2 : 0,\n      vertices,\n      nradial: diskResolution\n    });\n    let meanVertexDistance = 0;\n\n    if (vertices) {\n      for (let i = 0; i < diskResolution; i++) {\n        const p = vertices[i];\n        const d = Math.sqrt(p[0] * p[0] + p[1] * p[1]);\n        meanVertexDistance += d / diskResolution;\n      }\n    } else {\n      meanVertexDistance = 1;\n    }\n\n    this.setState({\n      edgeDistance: Math.cos(Math.PI / diskResolution) * meanVertexDistance\n    });\n    return geometry;\n  }\n\n  _getModel(gl) {\n    return new Model(gl, { ...this.getShaders(),\n      id: this.props.id,\n      isInstanced: true\n    });\n  }\n\n  _updateGeometry({\n    diskResolution,\n    vertices,\n    extruded,\n    stroked\n  }) {\n    const geometry = this.getGeometry(diskResolution, vertices, extruded || stroked);\n    this.setState({\n      fillVertexCount: geometry.attributes.POSITION.value.length / 3,\n      wireframeVertexCount: geometry.indices.value.length\n    });\n    this.state.model.setProps({\n      geometry\n    });\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels,\n      radiusUnits,\n      elevationScale,\n      extruded,\n      filled,\n      stroked,\n      wireframe,\n      offset,\n      coverage,\n      radius,\n      angle\n    } = this.props;\n    const {\n      model,\n      fillVertexCount,\n      wireframeVertexCount,\n      edgeDistance\n    } = this.state;\n    model.setUniforms(uniforms).setUniforms({\n      radius,\n      angle: angle / 180 * Math.PI,\n      offset,\n      extruded,\n      stroked,\n      coverage,\n      elevationScale,\n      edgeDistance,\n      radiusUnits: UNIT[radiusUnits],\n      widthUnits: UNIT[lineWidthUnits],\n      widthScale: lineWidthScale,\n      widthMinPixels: lineWidthMinPixels,\n      widthMaxPixels: lineWidthMaxPixels\n    });\n\n    if (extruded && wireframe) {\n      model.setProps({\n        isIndexed: true\n      });\n      model.setVertexCount(wireframeVertexCount).setDrawMode(1).setUniforms({\n        isStroke: true\n      }).draw();\n    }\n\n    if (filled) {\n      model.setProps({\n        isIndexed: false\n      });\n      model.setVertexCount(fillVertexCount).setDrawMode(5).setUniforms({\n        isStroke: false\n      }).draw();\n    }\n\n    if (!extruded && stroked) {\n      model.setProps({\n        isIndexed: false\n      });\n      model.setVertexCount(fillVertexCount * 2 / 3).setDrawMode(5).setUniforms({\n        isStroke: true\n      }).draw();\n    }\n  }\n\n}\n\n_defineProperty(ColumnLayer, \"layerName\", 'ColumnLayer');\n\n_defineProperty(ColumnLayer, \"defaultProps\", defaultProps);\n//# sourceMappingURL=column-layer.js.map","export const AGGREGATION_OPERATION = {\n  SUM: 1,\n  MEAN: 2,\n  MIN: 3,\n  MAX: 4\n};\n\nfunction sumReducer(accu, cur) {\n  return accu + cur;\n}\n\nfunction maxReducer(accu, cur) {\n  return cur > accu ? cur : accu;\n}\n\nfunction minReducer(accu, cur) {\n  return cur < accu ? cur : accu;\n}\n\nexport function getMean(pts, accessor) {\n  if (Number.isFinite(accessor)) {\n    return pts.length ? accessor : null;\n  }\n\n  const filtered = pts.map(accessor).filter(Number.isFinite);\n  return filtered.length ? filtered.reduce(sumReducer, 0) / filtered.length : null;\n}\nexport function getSum(pts, accessor) {\n  if (Number.isFinite(accessor)) {\n    return pts.length ? pts.length * accessor : null;\n  }\n\n  const filtered = pts.map(accessor).filter(Number.isFinite);\n  return filtered.length ? filtered.reduce(sumReducer, 0) : null;\n}\nexport function getMax(pts, accessor) {\n  if (Number.isFinite(accessor)) {\n    return pts.length ? accessor : null;\n  }\n\n  const filtered = pts.map(accessor).filter(Number.isFinite);\n  return filtered.length ? filtered.reduce(maxReducer, -Infinity) : null;\n}\nexport function getMin(pts, accessor) {\n  if (Number.isFinite(accessor)) {\n    return pts.length ? accessor : null;\n  }\n\n  const filtered = pts.map(accessor).filter(Number.isFinite);\n  return filtered.length ? filtered.reduce(minReducer, Infinity) : null;\n}\nexport function getValueFunc(aggregation, accessor, context) {\n  const op = AGGREGATION_OPERATION[aggregation] || AGGREGATION_OPERATION.SUM;\n  accessor = wrapAccessor(accessor, context);\n\n  switch (op) {\n    case AGGREGATION_OPERATION.MIN:\n      return pts => getMin(pts, accessor);\n\n    case AGGREGATION_OPERATION.SUM:\n      return pts => getSum(pts, accessor);\n\n    case AGGREGATION_OPERATION.MEAN:\n      return pts => getMean(pts, accessor);\n\n    case AGGREGATION_OPERATION.MAX:\n      return pts => getMax(pts, accessor);\n\n    default:\n      return null;\n  }\n}\n\nfunction wrapAccessor(accessor, context = {}) {\n  if (Number.isFinite(accessor)) {\n    return accessor;\n  }\n\n  return pt => {\n    context.index = pt.index;\n    return accessor(pt.source, context);\n  };\n}\n\nexport function wrapGetValueFunc(getValue, context = {}) {\n  return pts => {\n    context.indices = pts.map(pt => pt.index);\n    return getValue(pts.map(pt => pt.source), context);\n  };\n}\n//# sourceMappingURL=aggregation-operation-utils.js.map","export const defaultColorRange = [[255, 255, 178], [254, 217, 118], [254, 178, 76], [253, 141, 60], [240, 59, 32], [189, 0, 38]];\nexport function colorRangeToFlatArray(colorRange, normalize = false, ArrayType = Float32Array) {\n  let flatArray;\n\n  if (Number.isFinite(colorRange[0])) {\n    flatArray = new ArrayType(colorRange);\n  } else {\n    flatArray = new ArrayType(colorRange.length * 4);\n    let index = 0;\n\n    for (let i = 0; i < colorRange.length; i++) {\n      const color = colorRange[i];\n      flatArray[index++] = color[0];\n      flatArray[index++] = color[1];\n      flatArray[index++] = color[2];\n      flatArray[index++] = Number.isFinite(color[3]) ? color[3] : 255;\n    }\n  }\n\n  if (normalize) {\n    for (let i = 0; i < flatArray.length; i++) {\n      flatArray[i] /= 255;\n    }\n  }\n\n  return flatArray;\n}\n//# sourceMappingURL=color-utils.js.map","export function filterProps(props, filterKeys) {\n  const filteredProps = {};\n\n  for (const key in props) {\n    if (!filterKeys.includes(key)) {\n      filteredProps[key] = props[key];\n    }\n  }\n\n  return filteredProps;\n}\n//# sourceMappingURL=prop-utils.js.map","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { CompositeLayer, AttributeManager, _compareProps as compareProps } from '@deck.gl/core';\nimport { cssToDeviceRatio } from '@luma.gl/core';\nimport { filterProps } from './utils/prop-utils';\nexport default class AggregationLayer extends CompositeLayer {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", void 0);\n  }\n\n  initializeAggregationLayer(dimensions) {\n    super.initializeState(this.context);\n    this.setState({\n      ignoreProps: filterProps(this.constructor._propTypes, dimensions.data.props),\n      dimensions\n    });\n  }\n\n  updateState(opts) {\n    super.updateState(opts);\n    const {\n      changeFlags\n    } = opts;\n\n    if (changeFlags.extensionsChanged) {\n      const shaders = this.getShaders({});\n\n      if (shaders && shaders.defines) {\n        shaders.defines.NON_INSTANCED_MODEL = 1;\n      }\n\n      this.updateShaders(shaders);\n    }\n\n    this._updateAttributes();\n  }\n\n  updateAttributes(changedAttributes) {\n    this.setState({\n      changedAttributes\n    });\n  }\n\n  getAttributes() {\n    return this.getAttributeManager().getShaderAttributes();\n  }\n\n  getModuleSettings() {\n    const {\n      viewport,\n      mousePosition,\n      gl\n    } = this.context;\n    const moduleSettings = Object.assign(Object.create(this.props), {\n      viewport,\n      mousePosition,\n      pickingActive: 0,\n      devicePixelRatio: cssToDeviceRatio(gl)\n    });\n    return moduleSettings;\n  }\n\n  updateShaders(shaders) {}\n\n  isAggregationDirty(updateOpts, params = {}) {\n    const {\n      props,\n      oldProps,\n      changeFlags\n    } = updateOpts;\n    const {\n      compareAll = false,\n      dimension\n    } = params;\n    const {\n      ignoreProps\n    } = this.state;\n    const {\n      props: dataProps,\n      accessors = []\n    } = dimension;\n    const {\n      updateTriggersChanged\n    } = changeFlags;\n\n    if (changeFlags.dataChanged) {\n      return true;\n    }\n\n    if (updateTriggersChanged) {\n      if (updateTriggersChanged.all) {\n        return true;\n      }\n\n      for (const accessor of accessors) {\n        if (updateTriggersChanged[accessor]) {\n          return true;\n        }\n      }\n    }\n\n    if (compareAll) {\n      if (changeFlags.extensionsChanged) {\n        return true;\n      }\n\n      return compareProps({\n        oldProps,\n        newProps: props,\n        ignoreProps,\n        propTypes: this.constructor._propTypes\n      });\n    }\n\n    for (const name of dataProps) {\n      if (props[name] !== oldProps[name]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  isAttributeChanged(name) {\n    const {\n      changedAttributes\n    } = this.state;\n\n    if (!name) {\n      return !isObjectEmpty(changedAttributes);\n    }\n\n    return changedAttributes && changedAttributes[name] !== undefined;\n  }\n\n  _getAttributeManager() {\n    return new AttributeManager(this.context.gl, {\n      id: this.props.id,\n      stats: this.context.stats\n    });\n  }\n\n}\n\n_defineProperty(AggregationLayer, \"layerName\", 'AggregationLayer');\n\nfunction isObjectEmpty(obj) {\n  let isEmpty = true;\n\n  for (const key in obj) {\n    isEmpty = false;\n    break;\n  }\n\n  return isEmpty;\n}\n//# sourceMappingURL=aggregation-layer.js.map","import { log } from '@deck.gl/core';\nexport function getScale(domain, range, scaleFunction) {\n  const scale = scaleFunction;\n\n  scale.domain = () => domain;\n\n  scale.range = () => range;\n\n  return scale;\n}\nexport function getQuantizeScale(domain, range) {\n  const scaleFunction = value => quantizeScale(domain, range, value);\n\n  return getScale(domain, range, scaleFunction);\n}\nexport function getLinearScale(domain, range) {\n  const scaleFunction = value => linearScale(domain, range, value);\n\n  return getScale(domain, range, scaleFunction);\n}\nexport function getQuantileScale(domain, range) {\n  const sortedDomain = domain.sort(ascending);\n  let i = 0;\n  const n = Math.max(1, range.length);\n  const thresholds = new Array(n - 1);\n\n  while (++i < n) {\n    thresholds[i - 1] = threshold(sortedDomain, i / n);\n  }\n\n  const scaleFunction = value => thresholdsScale(thresholds, range, value);\n\n  scaleFunction.thresholds = () => thresholds;\n\n  return getScale(domain, range, scaleFunction);\n}\n\nfunction ascending(a, b) {\n  return a - b;\n}\n\nfunction threshold(domain, fraction) {\n  const domainLength = domain.length;\n\n  if (fraction <= 0 || domainLength < 2) {\n    return domain[0];\n  }\n\n  if (fraction >= 1) {\n    return domain[domainLength - 1];\n  }\n\n  const domainFraction = (domainLength - 1) * fraction;\n  const lowIndex = Math.floor(domainFraction);\n  const low = domain[lowIndex];\n  const high = domain[lowIndex + 1];\n  return low + (high - low) * (domainFraction - lowIndex);\n}\n\nfunction bisectRight(a, x) {\n  let lo = 0;\n  let hi = a.length;\n\n  while (lo < hi) {\n    const mid = lo + hi >>> 1;\n\n    if (ascending(a[mid], x) > 0) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n\n  return lo;\n}\n\nfunction thresholdsScale(thresholds, range, value) {\n  return range[bisectRight(thresholds, value)];\n}\n\nfunction ordinalScale(domain, domainMap, range, value) {\n  const key = \"\".concat(value);\n  let d = domainMap.get(key);\n\n  if (d === undefined) {\n    d = domain.push(value);\n    domainMap.set(key, d);\n  }\n\n  return range[(d - 1) % range.length];\n}\n\nexport function getOrdinalScale(domain, range) {\n  const domainMap = new Map();\n  const uniqueDomain = [];\n\n  for (const d of domain) {\n    const key = \"\".concat(d);\n\n    if (!domainMap.has(key)) {\n      domainMap.set(key, uniqueDomain.push(d));\n    }\n  }\n\n  const scaleFunction = value => ordinalScale(uniqueDomain, domainMap, range, value);\n\n  return getScale(domain, range, scaleFunction);\n}\nexport function quantizeScale(domain, range, value) {\n  const domainRange = domain[1] - domain[0];\n\n  if (domainRange <= 0) {\n    log.warn('quantizeScale: invalid domain, returning range[0]')();\n    return range[0];\n  }\n\n  const step = domainRange / range.length;\n  const idx = Math.floor((value - domain[0]) / step);\n  const clampIdx = Math.max(Math.min(idx, range.length - 1), 0);\n  return range[clampIdx];\n}\nexport function linearScale(domain, range, value) {\n  return (value - domain[0]) / (domain[1] - domain[0]) * (range[1] - range[0]) + range[0];\n}\n\nfunction notNullOrUndefined(d) {\n  return d !== undefined && d !== null;\n}\n\nexport function unique(values) {\n  const results = [];\n  values.forEach(v => {\n    if (!results.includes(v) && notNullOrUndefined(v)) {\n      results.push(v);\n    }\n  });\n  return results;\n}\n\nfunction getTruthyValues(data, valueAccessor) {\n  const values = typeof valueAccessor === 'function' ? data.map(valueAccessor) : data;\n  return values.filter(notNullOrUndefined);\n}\n\nexport function getLinearDomain(data, valueAccessor) {\n  const sorted = getTruthyValues(data, valueAccessor).sort();\n  return sorted.length ? [sorted[0], sorted[sorted.length - 1]] : [0, 0];\n}\nexport function getQuantileDomain(data, valueAccessor) {\n  return getTruthyValues(data, valueAccessor);\n}\nexport function getOrdinalDomain(data, valueAccessor) {\n  return unique(getTruthyValues(data, valueAccessor));\n}\nexport function getScaleDomain(scaleType, data, valueAccessor) {\n  switch (scaleType) {\n    case 'quantize':\n    case 'linear':\n      return getLinearDomain(data, valueAccessor);\n\n    case 'quantile':\n      return getQuantileDomain(data, valueAccessor);\n\n    case 'ordinal':\n      return getOrdinalDomain(data, valueAccessor);\n\n    default:\n      return getLinearDomain(data, valueAccessor);\n  }\n}\nexport function clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nexport function getScaleFunctionByScaleType(scaleType) {\n  switch (scaleType) {\n    case 'quantize':\n      return getQuantizeScale;\n\n    case 'linear':\n      return getLinearScale;\n\n    case 'quantile':\n      return getQuantileScale;\n\n    case 'ordinal':\n      return getOrdinalScale;\n\n    default:\n      return getQuantizeScale;\n  }\n}\n//# sourceMappingURL=scale-utils.js.map","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nconst defaultGetValue = points => points.length;\n\nimport { clamp, getQuantileDomain, getOrdinalDomain } from './scale-utils';\nconst MAX_32_BIT_FLOAT = 3.402823466e38;\n\nconst defaultGetPoints = bin => bin.points;\n\nconst defaultGetIndex = bin => bin.index;\n\nconst ascending = (a, b) => a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\nconst defaultProps = {\n  getValue: defaultGetValue,\n  getPoints: defaultGetPoints,\n  getIndex: defaultGetIndex,\n  filterData: null\n};\nexport default class BinSorter {\n  constructor(bins = [], props = defaultProps) {\n    _defineProperty(this, \"maxCount\", void 0);\n\n    _defineProperty(this, \"maxValue\", void 0);\n\n    _defineProperty(this, \"minValue\", void 0);\n\n    _defineProperty(this, \"totalCount\", void 0);\n\n    _defineProperty(this, \"aggregatedBins\", void 0);\n\n    _defineProperty(this, \"sortedBins\", void 0);\n\n    _defineProperty(this, \"binMap\", void 0);\n\n    this.aggregatedBins = this.getAggregatedBins(bins, props);\n\n    this._updateMinMaxValues();\n\n    this.binMap = this.getBinMap();\n  }\n\n  getAggregatedBins(bins, props) {\n    const {\n      getValue = defaultGetValue,\n      getPoints = defaultGetPoints,\n      getIndex = defaultGetIndex,\n      filterData\n    } = props;\n    const hasFilter = typeof filterData === 'function';\n    const binCount = bins.length;\n    const aggregatedBins = [];\n    let index = 0;\n\n    for (let binIndex = 0; binIndex < binCount; binIndex++) {\n      const bin = bins[binIndex];\n      const points = getPoints(bin);\n      const i = getIndex(bin);\n      const filteredPoints = hasFilter ? points.filter(filterData) : points;\n      bin.filteredPoints = hasFilter ? filteredPoints : null;\n      const value = filteredPoints.length ? getValue(filteredPoints) : null;\n\n      if (value !== null && value !== undefined) {\n        aggregatedBins[index] = {\n          i: Number.isFinite(i) ? i : binIndex,\n          value,\n          counts: filteredPoints.length\n        };\n        index++;\n      }\n    }\n\n    return aggregatedBins;\n  }\n\n  _percentileToIndex(percentileRange) {\n    const len = this.sortedBins.length;\n\n    if (len < 2) {\n      return [0, 0];\n    }\n\n    const [lower, upper] = percentileRange.map(n => clamp(n, 0, 100));\n    const lowerIdx = Math.ceil(lower / 100 * (len - 1));\n    const upperIdx = Math.floor(upper / 100 * (len - 1));\n    return [lowerIdx, upperIdx];\n  }\n\n  getBinMap() {\n    const binMap = {};\n\n    for (const bin of this.aggregatedBins) {\n      binMap[bin.i] = bin;\n    }\n\n    return binMap;\n  }\n\n  _updateMinMaxValues() {\n    let maxCount = 0;\n    let maxValue = 0;\n    let minValue = MAX_32_BIT_FLOAT;\n    let totalCount = 0;\n\n    for (const x of this.aggregatedBins) {\n      maxCount = maxCount > x.counts ? maxCount : x.counts;\n      maxValue = maxValue > x.value ? maxValue : x.value;\n      minValue = minValue < x.value ? minValue : x.value;\n      totalCount += x.counts;\n    }\n\n    this.maxCount = maxCount;\n    this.maxValue = maxValue;\n    this.minValue = minValue;\n    this.totalCount = totalCount;\n  }\n\n  getValueRange(percentileRange) {\n    if (!this.sortedBins) {\n      this.sortedBins = this.aggregatedBins.sort((a, b) => ascending(a.value, b.value));\n    }\n\n    if (!this.sortedBins.length) {\n      return [];\n    }\n\n    let lowerIdx = 0;\n    let upperIdx = this.sortedBins.length - 1;\n\n    if (Array.isArray(percentileRange)) {\n      const idxRange = this._percentileToIndex(percentileRange);\n\n      lowerIdx = idxRange[0];\n      upperIdx = idxRange[1];\n    }\n\n    return [this.sortedBins[lowerIdx].value, this.sortedBins[upperIdx].value];\n  }\n\n  getValueDomainByScale(scale, [lower = 0, upper = 100] = []) {\n    if (!this.sortedBins) {\n      this.sortedBins = this.aggregatedBins.sort((a, b) => ascending(a.value, b.value));\n    }\n\n    if (!this.sortedBins.length) {\n      return [];\n    }\n\n    const indexEdge = this._percentileToIndex([lower, upper]);\n\n    return this._getScaleDomain(scale, indexEdge);\n  }\n\n  _getScaleDomain(scaleType, [lowerIdx, upperIdx]) {\n    const bins = this.sortedBins;\n\n    switch (scaleType) {\n      case 'quantize':\n      case 'linear':\n        return [bins[lowerIdx].value, bins[upperIdx].value];\n\n      case 'quantile':\n        return getQuantileDomain(bins.slice(lowerIdx, upperIdx + 1), d => d.value);\n\n      case 'ordinal':\n        return getOrdinalDomain(bins, d => d.value);\n\n      default:\n        return [bins[lowerIdx].value, bins[upperIdx].value];\n    }\n  }\n\n}\n//# sourceMappingURL=bin-sorter.js.map","import BinSorter from './bin-sorter';\nimport { getScaleFunctionByScaleType } from './scale-utils';\nimport { getValueFunc, wrapGetValueFunc } from './aggregation-operation-utils';\n\nfunction nop() {}\n\nconst dimensionSteps = ['getBins', 'getDomain', 'getScaleFunc'];\nconst defaultDimensions = [{\n  key: 'fillColor',\n  accessor: 'getFillColor',\n  pickingInfo: 'colorValue',\n  getBins: {\n    triggers: {\n      value: {\n        prop: 'getColorValue',\n        updateTrigger: 'getColorValue'\n      },\n      weight: {\n        prop: 'getColorWeight',\n        updateTrigger: 'getColorWeight'\n      },\n      aggregation: {\n        prop: 'colorAggregation'\n      },\n      filterData: {\n        prop: '_filterData',\n        updateTrigger: '_filterData'\n      }\n    }\n  },\n  getDomain: {\n    triggers: {\n      lowerPercentile: {\n        prop: 'lowerPercentile'\n      },\n      upperPercentile: {\n        prop: 'upperPercentile'\n      },\n      scaleType: {\n        prop: 'colorScaleType'\n      }\n    }\n  },\n  getScaleFunc: {\n    triggers: {\n      domain: {\n        prop: 'colorDomain'\n      },\n      range: {\n        prop: 'colorRange'\n      }\n    },\n    onSet: {\n      props: 'onSetColorDomain'\n    }\n  },\n  nullValue: [0, 0, 0, 0]\n}, {\n  key: 'elevation',\n  accessor: 'getElevation',\n  pickingInfo: 'elevationValue',\n  getBins: {\n    triggers: {\n      value: {\n        prop: 'getElevationValue',\n        updateTrigger: 'getElevationValue'\n      },\n      weight: {\n        prop: 'getElevationWeight',\n        updateTrigger: 'getElevationWeight'\n      },\n      aggregation: {\n        prop: 'elevationAggregation'\n      },\n      filterData: {\n        prop: '_filterData',\n        updateTrigger: '_filterData'\n      }\n    }\n  },\n  getDomain: {\n    triggers: {\n      lowerPercentile: {\n        prop: 'elevationLowerPercentile'\n      },\n      upperPercentile: {\n        prop: 'elevationUpperPercentile'\n      },\n      scaleType: {\n        prop: 'elevationScaleType'\n      }\n    }\n  },\n  getScaleFunc: {\n    triggers: {\n      domain: {\n        prop: 'elevationDomain'\n      },\n      range: {\n        prop: 'elevationRange'\n      }\n    },\n    onSet: {\n      props: 'onSetElevationDomain'\n    }\n  },\n  nullValue: -1\n}];\n\nconst defaultGetCellSize = props => props.cellSize;\n\nexport default class CPUAggregator {\n  constructor(opts) {\n    this.state = {\n      layerData: {},\n      dimensions: {}\n    };\n    this.changeFlags = {};\n    this.dimensionUpdaters = {};\n    this._getCellSize = opts.getCellSize || defaultGetCellSize;\n    this._getAggregator = opts.getAggregator;\n\n    this._addDimension(opts.dimensions || defaultDimensions);\n  }\n\n  static defaultDimensions() {\n    return defaultDimensions;\n  }\n\n  updateState(opts, aggregationParams) {\n    const {\n      oldProps,\n      props,\n      changeFlags\n    } = opts;\n    this.updateGetValueFuncs(oldProps, props, changeFlags);\n    const reprojectNeeded = this.needsReProjectPoints(oldProps, props, changeFlags);\n    let aggregationDirty = false;\n\n    if (changeFlags.dataChanged || reprojectNeeded) {\n      this.getAggregatedData(props, aggregationParams);\n      aggregationDirty = true;\n    } else {\n      const dimensionChanges = this.getDimensionChanges(oldProps, props, changeFlags) || [];\n      dimensionChanges.forEach(f => typeof f === 'function' && f());\n      aggregationDirty = true;\n    }\n\n    this.setState({\n      aggregationDirty\n    });\n    return this.state;\n  }\n\n  setState(updateObject) {\n    this.state = { ...this.state,\n      ...updateObject\n    };\n  }\n\n  setDimensionState(key, updateObject) {\n    this.setState({\n      dimensions: { ...this.state.dimensions,\n        [key]: { ...this.state.dimensions[key],\n          ...updateObject\n        }\n      }\n    });\n  }\n\n  normalizeResult(result = {}) {\n    if (result.hexagons) {\n      return {\n        data: result.hexagons,\n        ...result\n      };\n    } else if (result.layerData) {\n      return {\n        data: result.layerData,\n        ...result\n      };\n    }\n\n    return result;\n  }\n\n  getAggregatedData(props, aggregationParams) {\n    const aggregator = this._getAggregator(props);\n\n    const result = aggregator(props, aggregationParams);\n    this.setState({\n      layerData: this.normalizeResult(result)\n    });\n    this.changeFlags = {\n      layerData: true\n    };\n    this.getSortedBins(props);\n  }\n\n  updateGetValueFuncs(oldProps, props, changeFlags) {\n    for (const key in this.dimensionUpdaters) {\n      const {\n        value,\n        weight,\n        aggregation\n      } = this.dimensionUpdaters[key].getBins.triggers;\n      let getValue = props[value.prop];\n      const getValueChanged = this.needUpdateDimensionStep(this.dimensionUpdaters[key].getBins, oldProps, props, changeFlags);\n\n      if (getValueChanged) {\n        if (getValue) {\n          getValue = wrapGetValueFunc(getValue, {\n            data: props.data\n          });\n        } else {\n          getValue = getValueFunc(props[aggregation.prop], props[weight.prop], {\n            data: props.data\n          });\n        }\n      }\n\n      if (getValue) {\n        this.setDimensionState(key, {\n          getValue\n        });\n      }\n    }\n  }\n\n  needsReProjectPoints(oldProps, props, changeFlags) {\n    return this._getCellSize(oldProps) !== this._getCellSize(props) || this._getAggregator(oldProps) !== this._getAggregator(props) || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPosition);\n  }\n\n  addDimension(dimensions) {\n    this._addDimension(dimensions);\n  }\n\n  _addDimension(dimensions = []) {\n    dimensions.forEach(dimension => {\n      const {\n        key\n      } = dimension;\n      this.dimensionUpdaters[key] = this.getDimensionUpdaters(dimension);\n      this.state.dimensions[key] = {\n        getValue: null,\n        domain: null,\n        sortedBins: null,\n        scaleFunc: nop\n      };\n    });\n  }\n\n  getDimensionUpdaters({\n    key,\n    accessor,\n    pickingInfo,\n    getBins,\n    getDomain,\n    getScaleFunc,\n    nullValue\n  }) {\n    return {\n      key,\n      accessor,\n      pickingInfo,\n      getBins: {\n        updater: this.getDimensionSortedBins,\n        ...getBins\n      },\n      getDomain: {\n        updater: this.getDimensionValueDomain,\n        ...getDomain\n      },\n      getScaleFunc: {\n        updater: this.getDimensionScale,\n        ...getScaleFunc\n      },\n      attributeAccessor: this.getSubLayerDimensionAttribute(key, nullValue)\n    };\n  }\n\n  needUpdateDimensionStep(dimensionStep, oldProps, props, changeFlags) {\n    return Object.values(dimensionStep.triggers).some(item => {\n      if (item.updateTrigger) {\n        return changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged[item.updateTrigger]);\n      }\n\n      return oldProps[item.prop] !== props[item.prop];\n    });\n  }\n\n  getDimensionChanges(oldProps, props, changeFlags) {\n    const updaters = [];\n\n    for (const key in this.dimensionUpdaters) {\n      const needUpdate = dimensionSteps.find(step => this.needUpdateDimensionStep(this.dimensionUpdaters[key][step], oldProps, props, changeFlags));\n\n      if (needUpdate) {\n        updaters.push(this.dimensionUpdaters[key][needUpdate].updater.bind(this, props, this.dimensionUpdaters[key]));\n      }\n    }\n\n    return updaters.length ? updaters : null;\n  }\n\n  getUpdateTriggers(props) {\n    const _updateTriggers = props.updateTriggers || {};\n\n    const updateTriggers = {};\n\n    for (const key in this.dimensionUpdaters) {\n      const {\n        accessor\n      } = this.dimensionUpdaters[key];\n      updateTriggers[accessor] = {};\n      dimensionSteps.forEach(step => {\n        Object.values(this.dimensionUpdaters[key][step].triggers).forEach(({\n          prop,\n          updateTrigger\n        }) => {\n          if (updateTrigger) {\n            const fromProp = _updateTriggers[updateTrigger];\n\n            if (typeof fromProp === 'object' && !Array.isArray(fromProp)) {\n              Object.assign(updateTriggers[accessor], fromProp);\n            } else if (fromProp !== undefined) {\n              updateTriggers[accessor][prop] = fromProp;\n            }\n          } else {\n            updateTriggers[accessor][prop] = props[prop];\n          }\n        });\n      });\n    }\n\n    return updateTriggers;\n  }\n\n  getSortedBins(props) {\n    for (const key in this.dimensionUpdaters) {\n      this.getDimensionSortedBins(props, this.dimensionUpdaters[key]);\n    }\n  }\n\n  getDimensionSortedBins(props, dimensionUpdater) {\n    const {\n      key\n    } = dimensionUpdater;\n    const {\n      getValue\n    } = this.state.dimensions[key];\n    const sortedBins = new BinSorter(this.state.layerData.data || [], {\n      getValue,\n      filterData: props._filterData\n    });\n    this.setDimensionState(key, {\n      sortedBins\n    });\n    this.getDimensionValueDomain(props, dimensionUpdater);\n  }\n\n  getDimensionValueDomain(props, dimensionUpdater) {\n    const {\n      getDomain,\n      key\n    } = dimensionUpdater;\n    const {\n      triggers: {\n        lowerPercentile,\n        upperPercentile,\n        scaleType\n      }\n    } = getDomain;\n    const valueDomain = this.state.dimensions[key].sortedBins.getValueDomainByScale(props[scaleType.prop], [props[lowerPercentile.prop], props[upperPercentile.prop]]);\n    this.setDimensionState(key, {\n      valueDomain\n    });\n    this.getDimensionScale(props, dimensionUpdater);\n  }\n\n  getDimensionScale(props, dimensionUpdater) {\n    const {\n      key,\n      getScaleFunc,\n      getDomain\n    } = dimensionUpdater;\n    const {\n      domain,\n      range\n    } = getScaleFunc.triggers;\n    const {\n      scaleType\n    } = getDomain.triggers;\n    const {\n      onSet\n    } = getScaleFunc;\n    const dimensionRange = props[range.prop];\n    const dimensionDomain = props[domain.prop] || this.state.dimensions[key].valueDomain;\n    const getScaleFunction = getScaleFunctionByScaleType(scaleType && props[scaleType.prop]);\n    const scaleFunc = getScaleFunction(dimensionDomain, dimensionRange);\n\n    if (typeof onSet === 'object' && typeof props[onSet.props] === 'function') {\n      props[onSet.props](scaleFunc.domain());\n    }\n\n    this.setDimensionState(key, {\n      scaleFunc\n    });\n  }\n\n  getSubLayerDimensionAttribute(key, nullValue) {\n    return cell => {\n      const {\n        sortedBins,\n        scaleFunc\n      } = this.state.dimensions[key];\n      const bin = sortedBins.binMap[cell.index];\n\n      if (bin && bin.counts === 0) {\n        return nullValue;\n      }\n\n      const cv = bin && bin.value;\n      const domain = scaleFunc.domain();\n      const isValueInDomain = cv >= domain[0] && cv <= domain[domain.length - 1];\n      return isValueInDomain ? scaleFunc(cv) : nullValue;\n    };\n  }\n\n  getSubLayerAccessors(props) {\n    const accessors = {};\n\n    for (const key in this.dimensionUpdaters) {\n      const {\n        accessor\n      } = this.dimensionUpdaters[key];\n      accessors[accessor] = this.getSubLayerDimensionAttribute(props, key);\n    }\n\n    return accessors;\n  }\n\n  getPickingInfo({\n    info\n  }) {\n    const isPicked = info.picked && info.index > -1;\n    let object = null;\n\n    if (isPicked) {\n      const cell = this.state.layerData.data[info.index];\n      const binInfo = {};\n\n      for (const key in this.dimensionUpdaters) {\n        const {\n          pickingInfo\n        } = this.dimensionUpdaters[key];\n        const {\n          sortedBins\n        } = this.state.dimensions[key];\n        const value = sortedBins.binMap[cell.index] && sortedBins.binMap[cell.index].value;\n        binInfo[pickingInfo] = value;\n      }\n\n      object = Object.assign(binInfo, cell, {\n        points: cell.filteredPoints || cell.points\n      });\n    }\n\n    info.picked = Boolean(object);\n    info.object = object;\n    return info;\n  }\n\n  getAccessor(dimensionKey) {\n    if (!this.dimensionUpdaters.hasOwnProperty(dimensionKey)) {\n      return nop;\n    }\n\n    return this.dimensionUpdaters[dimensionKey].attributeAccessor;\n  }\n\n}\n//# sourceMappingURL=cpu-aggregator.js.map","var thirdPi = Math.PI / 3,\n    angles = [0, thirdPi, 2 * thirdPi, 3 * thirdPi, 4 * thirdPi, 5 * thirdPi];\n\nfunction pointX(d) {\n  return d[0];\n}\n\nfunction pointY(d) {\n  return d[1];\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 1,\n      y1 = 1,\n      x = pointX,\n      y = pointY,\n      r,\n      dx,\n      dy;\n\n  function hexbin(points) {\n    var binsById = {}, bins = [], i, n = points.length;\n\n    for (i = 0; i < n; ++i) {\n      if (isNaN(px = +x.call(null, point = points[i], i, points))\n          || isNaN(py = +y.call(null, point, i, points))) continue;\n\n      var point,\n          px,\n          py,\n          pj = Math.round(py = py / dy),\n          pi = Math.round(px = px / dx - (pj & 1) / 2),\n          py1 = py - pj;\n\n      if (Math.abs(py1) * 3 > 1) {\n        var px1 = px - pi,\n            pi2 = pi + (px < pi ? -1 : 1) / 2,\n            pj2 = pj + (py < pj ? -1 : 1),\n            px2 = px - pi2,\n            py2 = py - pj2;\n        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n      }\n\n      var id = pi + \"-\" + pj, bin = binsById[id];\n      if (bin) bin.push(point);\n      else {\n        bins.push(bin = binsById[id] = [point]);\n        bin.x = (pi + (pj & 1) / 2) * dx;\n        bin.y = pj * dy;\n      }\n    }\n\n    return bins;\n  }\n\n  function hexagon(radius) {\n    var x0 = 0, y0 = 0;\n    return angles.map(function(angle) {\n      var x1 = Math.sin(angle) * radius,\n          y1 = -Math.cos(angle) * radius,\n          dx = x1 - x0,\n          dy = y1 - y0;\n      x0 = x1, y0 = y1;\n      return [dx, dy];\n    });\n  }\n\n  hexbin.hexagon = function(radius) {\n    return \"m\" + hexagon(radius == null ? r : +radius).join(\"l\") + \"z\";\n  };\n\n  hexbin.centers = function() {\n    var centers = [],\n        j = Math.round(y0 / dy),\n        i = Math.round(x0 / dx);\n    for (var y = j * dy; y < y1 + r; y += dy, ++j) {\n      for (var x = i * dx + (j & 1) * dx / 2; x < x1 + dx / 2; x += dx) {\n        centers.push([x, y]);\n      }\n    }\n    return centers;\n  };\n\n  hexbin.mesh = function() {\n    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n    return hexbin.centers().map(function(p) { return \"M\" + p + \"m\" + fragment; }).join(\"\");\n  };\n\n  hexbin.x = function(_) {\n    return arguments.length ? (x = _, hexbin) : x;\n  };\n\n  hexbin.y = function(_) {\n    return arguments.length ? (y = _, hexbin) : y;\n  };\n\n  hexbin.radius = function(_) {\n    return arguments.length ? (r = +_, dx = r * 2 * Math.sin(thirdPi), dy = r * 1.5, hexbin) : r;\n  };\n\n  hexbin.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], hexbin) : [x1 - x0, y1 - y0];\n  };\n\n  hexbin.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], hexbin) : [[x0, y0], [x1, y1]];\n  };\n\n  return hexbin.radius(1);\n}\n","import { hexbin } from 'd3-hexbin';\nimport { createIterable, log } from '@deck.gl/core';\nexport function pointToHexbin(props, aggregationParams) {\n  const {\n    data,\n    radius\n  } = props;\n  const {\n    viewport,\n    attributes\n  } = aggregationParams;\n  const centerLngLat = data.length ? getPointsCenter(data, aggregationParams) : null;\n  const radiusCommon = getRadiusInCommon(radius, viewport, centerLngLat);\n  const screenPoints = [];\n  const {\n    iterable,\n    objectInfo\n  } = createIterable(data);\n  const positions = attributes.positions.value;\n  const {\n    size\n  } = attributes.positions.getAccessor();\n\n  for (const object of iterable) {\n    objectInfo.index++;\n    const posIndex = objectInfo.index * size;\n    const position = [positions[posIndex], positions[posIndex + 1]];\n    const arrayIsFinite = Number.isFinite(position[0]) && Number.isFinite(position[1]);\n\n    if (arrayIsFinite) {\n      screenPoints.push({\n        screenCoord: viewport.projectFlat(position),\n        source: object,\n        index: objectInfo.index\n      });\n    } else {\n      log.warn('HexagonLayer: invalid position')();\n    }\n  }\n\n  const newHexbin = hexbin().radius(radiusCommon).x(d => d.screenCoord[0]).y(d => d.screenCoord[1]);\n  const hexagonBins = newHexbin(screenPoints);\n  return {\n    hexagons: hexagonBins.map((hex, index) => ({\n      position: viewport.unprojectFlat([hex.x, hex.y]),\n      points: hex,\n      index\n    })),\n    radiusCommon\n  };\n}\nexport function getPointsCenter(data, aggregationParams) {\n  const {\n    attributes\n  } = aggregationParams;\n  const positions = attributes.positions.value;\n  const {\n    size\n  } = attributes.positions.getAccessor();\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let i;\n\n  for (i = 0; i < size * data.length; i += size) {\n    const x = positions[i];\n    const y = positions[i + 1];\n    const arrayIsFinite = Number.isFinite(x) && Number.isFinite(y);\n\n    if (arrayIsFinite) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  return [minX, minY, maxX, maxY].every(Number.isFinite) ? [(minX + maxX) / 2, (minY + maxY) / 2] : null;\n}\nexport function getRadiusInCommon(radius, viewport, center) {\n  const {\n    unitsPerMeter\n  } = viewport.getDistanceScales(center);\n  return radius * unitsPerMeter[0];\n}\n//# sourceMappingURL=hexagon-aggregator.js.map","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { log } from '@deck.gl/core';\nimport { ColumnLayer } from '@deck.gl/layers';\nimport { defaultColorRange } from '../utils/color-utils';\nimport { pointToHexbin } from './hexagon-aggregator';\nimport CPUAggregator from '../utils/cpu-aggregator';\nimport AggregationLayer from '../aggregation-layer';\n\nfunction nop() {}\n\nconst defaultProps = {\n  colorDomain: null,\n  colorRange: defaultColorRange,\n  getColorValue: {\n    type: 'accessor',\n    value: null\n  },\n  getColorWeight: {\n    type: 'accessor',\n    value: 1\n  },\n  colorAggregation: 'SUM',\n  lowerPercentile: {\n    type: 'number',\n    value: 0,\n    min: 0,\n    max: 100\n  },\n  upperPercentile: {\n    type: 'number',\n    value: 100,\n    min: 0,\n    max: 100\n  },\n  colorScaleType: 'quantize',\n  onSetColorDomain: nop,\n  elevationDomain: null,\n  elevationRange: [0, 1000],\n  getElevationValue: {\n    type: 'accessor',\n    value: null\n  },\n  getElevationWeight: {\n    type: 'accessor',\n    value: 1\n  },\n  elevationAggregation: 'SUM',\n  elevationLowerPercentile: {\n    type: 'number',\n    value: 0,\n    min: 0,\n    max: 100\n  },\n  elevationUpperPercentile: {\n    type: 'number',\n    value: 100,\n    min: 0,\n    max: 100\n  },\n  elevationScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  elevationScaleType: 'linear',\n  onSetElevationDomain: nop,\n  radius: {\n    type: 'number',\n    value: 1000,\n    min: 1\n  },\n  coverage: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    value: 1\n  },\n  extruded: false,\n  hexagonAggregator: pointToHexbin,\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  material: true,\n  _filterData: {\n    type: 'function',\n    value: null,\n    optional: true\n  }\n};\nexport default class HexagonLayer extends AggregationLayer {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", void 0);\n  }\n\n  initializeState() {\n    const cpuAggregator = new CPUAggregator({\n      getAggregator: props => props.hexagonAggregator,\n      getCellSize: props => props.radius\n    });\n    this.state = {\n      cpuAggregator,\n      aggregatorState: cpuAggregator.state,\n      vertices: null\n    };\n    const attributeManager = this.getAttributeManager();\n    attributeManager.add({\n      positions: {\n        size: 3,\n        type: 5130,\n        accessor: 'getPosition'\n      }\n    });\n  }\n\n  updateState(opts) {\n    super.updateState(opts);\n\n    if (opts.changeFlags.propsOrDataChanged) {\n      const aggregatorState = this.state.cpuAggregator.updateState(opts, {\n        viewport: this.context.viewport,\n        attributes: this.getAttributes()\n      });\n\n      if (this.state.aggregatorState.layerData !== aggregatorState.layerData) {\n        const {\n          hexagonVertices\n        } = aggregatorState.layerData || {};\n        this.setState({\n          vertices: hexagonVertices && this.convertLatLngToMeterOffset(hexagonVertices)\n        });\n      }\n\n      this.setState({\n        aggregatorState\n      });\n    }\n  }\n\n  convertLatLngToMeterOffset(hexagonVertices) {\n    const {\n      viewport\n    } = this.context;\n\n    if (Array.isArray(hexagonVertices) && hexagonVertices.length === 6) {\n      const vertex0 = hexagonVertices[0];\n      const vertex3 = hexagonVertices[3];\n      const centroid = [(vertex0[0] + vertex3[0]) / 2, (vertex0[1] + vertex3[1]) / 2];\n      const centroidFlat = viewport.projectFlat(centroid);\n      const {\n        metersPerUnit\n      } = viewport.getDistanceScales(centroid);\n      const vertices = hexagonVertices.map(vt => {\n        const vtFlat = viewport.projectFlat(vt);\n        return [(vtFlat[0] - centroidFlat[0]) * metersPerUnit[0], (vtFlat[1] - centroidFlat[1]) * metersPerUnit[1]];\n      });\n      return vertices;\n    }\n\n    log.error('HexagonLayer: hexagonVertices needs to be an array of 6 points')();\n    return null;\n  }\n\n  getPickingInfo({\n    info\n  }) {\n    return this.state.cpuAggregator.getPickingInfo({\n      info\n    });\n  }\n\n  _onGetSublayerColor(cell) {\n    return this.state.cpuAggregator.getAccessor('fillColor')(cell);\n  }\n\n  _onGetSublayerElevation(cell) {\n    return this.state.cpuAggregator.getAccessor('elevation')(cell);\n  }\n\n  _getSublayerUpdateTriggers() {\n    return this.state.cpuAggregator.getUpdateTriggers(this.props);\n  }\n\n  renderLayers() {\n    const {\n      elevationScale,\n      extruded,\n      coverage,\n      material,\n      transitions\n    } = this.props;\n    const {\n      aggregatorState,\n      vertices\n    } = this.state;\n    const SubLayerClass = this.getSubLayerClass('hexagon-cell', ColumnLayer);\n\n    const updateTriggers = this._getSublayerUpdateTriggers();\n\n    const geometry = vertices ? {\n      vertices,\n      radius: 1\n    } : {\n      radius: aggregatorState.layerData.radiusCommon || 1,\n      radiusUnits: 'common',\n      angle: 90\n    };\n    return new SubLayerClass({ ...geometry,\n      diskResolution: 6,\n      elevationScale,\n      extruded,\n      coverage,\n      material,\n      getFillColor: this._onGetSublayerColor.bind(this),\n      getElevation: this._onGetSublayerElevation.bind(this),\n      transitions: transitions && {\n        getFillColor: transitions.getColorValue || transitions.getColorWeight,\n        getElevation: transitions.getElevationValue || transitions.getElevationWeight\n      }\n    }, this.getSubLayerProps({\n      id: 'hexagon-cell',\n      updateTriggers\n    }), {\n      data: aggregatorState.layerData.data\n    });\n  }\n\n}\n\n_defineProperty(HexagonLayer, \"layerName\", 'HexagonLayer');\n\n_defineProperty(HexagonLayer, \"defaultProps\", defaultProps);\n//# sourceMappingURL=hexagon-layer.js.map","import React, { useState, useMemo, useEffect } from 'react'\nimport DeckGL from '@deck.gl/react'\nimport { StaticMap, InteractiveMap } from 'react-map-gl'\nimport { ArcLayer } from '@deck.gl/layers'\nimport { HexagonLayer } from '@deck.gl/aggregation-layers'\nimport colormap from 'colormap'\n\nimport globalStore from '@/store'\nimport { MAPBOX_TOKEN, REACT_VIEW_HANDLES } from '@/Globals'\n\nconst material = {\n  ambient: 0.64,\n  diffuse: 0.6,\n  shininess: 32,\n  specularColor: [51, 51, 51],\n}\n\nconst INITIAL_VIEW = {\n  zoom: 10,\n  longitude: 13.45,\n  latitude: 52.5,\n  pitch: 0,\n  bearing: 0,\n}\n\n// LAYER --------------------------------------------------------\nexport default function Layer({\n  viewId = 0,\n  colorRamp = 'chlorophyll',\n  coverage = 0.65,\n  dark = false,\n  data = { raw: new Float32Array(0), length: 0 },\n  extrude = true,\n  highlights = [],\n  mapIsIndependent = false,\n  maxHeight = 200,\n  metric = 'Count',\n  radius = 100,\n  selectedHexStats = { rows: 0, numHexagons: 0, selectedHexagonIds: [] },\n  upperPercentile = 100,\n  onClick = {} as any,\n}) {\n  // manage SimWrapper centralized viewState - for linked maps\n  const [viewState, setViewState] = useState(INITIAL_VIEW)\n\n  REACT_VIEW_HANDLES[viewId] = (view: any) => {\n    if (view) {\n      setViewState(view)\n    } else {\n      setViewState(globalStore.state.viewState)\n    }\n  }\n\n  function handleViewState(view: any) {\n    if (!view.latitude) return\n\n    if (!view.center) view.center = [0, 0]\n    view.center[0] = view.longitude\n    view.center[1] = view.latitude\n    setViewState(view)\n\n    if (!mapIsIndependent) globalStore.commit('setMapCamera', view)\n  }\n\n  const colors = colormap({\n    colormap: colorRamp,\n    nshades: 10,\n    format: 'rba',\n    alpha: 1,\n  }).map((c: number[]) => [c[0], c[1], c[2]])\n\n  function getTooltip({ object }: any) {\n    if (!object || !object.position || !object.position.length) {\n      return null\n    }\n\n    const lat = object.position[1]\n    const lng = object.position[0]\n    const count = object.points.length\n\n    return {\n      html: `\\\n        <b>${highlights.length ? 'Count' : metric}: ${count} </b><br/>\n        ${Number.isFinite(lat) ? lat.toFixed(4) : ''} / ${\n        Number.isFinite(lng) ? lng.toFixed(4) : ''\n      }\n      `,\n      style: dark\n        ? { color: '#ccc', backgroundColor: '#2a3c4f' }\n        : { color: '#223', backgroundColor: 'white' },\n    }\n  }\n\n  function handleClick(target: any, event: any) {\n    onClick(target, event)\n  }\n\n  // is data filtered or not?\n  let rows = null\n  if (highlights.length) {\n    rows = highlights.map(row => row[1])\n  } else if (!data.length) {\n    rows = null\n  } else {\n    rows = {\n      length: data.length,\n      attributes: {\n        getPosition: { value: data.raw, size: 2 },\n      },\n    }\n  }\n\n  const layers = [\n    new ArcLayer({\n      id: 'arc-layer',\n      data: highlights,\n      getSourcePosition: (d: any) => d[0],\n      getTargetPosition: (d: any) => d[1],\n      pickable: false,\n      opacity: 0.4,\n      getHeight: 0,\n      getWidth: 1,\n      getSourceColor: dark ? [144, 96, 128] : [192, 192, 240],\n      getTargetColor: dark ? [144, 96, 128] : [192, 192, 240],\n    }),\n    new HexagonLayer({\n      id: 'hexlayer',\n      data: rows,\n      getPosition: highlights.length ? (d: any) => d : null,\n      colorRange: dark ? colors.slice(1) : colors.reverse().slice(1),\n      coverage,\n      autoHighlight: true,\n      elevationRange: [0, maxHeight],\n      elevationScale: data && data.length ? 50 : 0,\n      extruded: extrude,\n      selectedHexStats,\n      // hexagonAggregator: pointToHexbin,\n      pickable: true,\n      opacity: 0.7, // dark && highlights.length ? 0.6 : 0.8,\n      radius,\n      upperPercentile,\n      material,\n      transitions: {\n        elevationScale: { type: 'interpolation', duration: 1000 },\n        opacity: { type: 'interpolation', duration: 200 },\n      },\n    }),\n  ]\n\n  return (\n    <DeckGL\n      layers={layers}\n      controller={true}\n      useDevicePixels={false}\n      viewState={viewState}\n      getTooltip={getTooltip}\n      onClick={handleClick}\n      onViewStateChange={(e: any) => handleViewState(e.viewState)}\n    >\n      {\n        /*\n        // @ts-ignore */\n        <StaticMap\n          mapStyle={globalStore.getters.mapStyle}\n          preventStyleDiffing={true}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n        />\n      }\n    </DeckGL>\n  )\n}\n","<template lang=\"pug\">\n.xy-hexagons(:class=\"{'hide-thumbnail': !thumbnail}\" oncontextmenu=\"return false\" :id=\"`id-${id}`\")\n\n  xy-hex-deck-map.hex-layer(\n    v-if=\"!thumbnail && isLoaded\"\n    v-bind=\"mapProps\"\n  )\n\n  zoom-buttons(v-if=\"!thumbnail\")\n  //- drawing-tool.drawing-tool(v-if=\"!thumbnail\")\n\n  .left-side(v-if=\"isLoaded && !thumbnail && vizDetails.title\")\n    collapsible-panel(direction=\"left\" :locked=\"true\")\n      .panel-items(v-if=\"hexStats\" style=\"color: #c0f;\")\n        p.big(style=\"margin-top: 2rem;\") {{ $t('selection') }}:\n        h3(style=\"margin-top: -1rem;\") {{ $t('areas') }}: {{ hexStats.numHexagons }}, {{ $t('count') }}: {{ hexStats.rows }}\n        button.button(style=\"color: #c0f; border-color: #c0f\" @click=\"handleShowSelectionButton\") {{ $t('showDetails') }}\n\n  .control-panel(v-if=\"isLoaded && !thumbnail && !myState.statusMessage\")\n        //- :class=\"{'is-dashboard': config !== undefined }\"\n\n        .panel-item(v-for=\"group in Object.keys(aggregations)\" :key=\"group\")\n          p.ui-label {{ group }}\n          button.button.is-small.aggregation-button(\n            v-for=\"element,i in aggregations[group]\"\n            :key=\"i\"\n            :style=\"{'margin-bottom': '0.25rem', 'color': activeAggregation===`${group}~${i}` ? 'white' : buttonColors[i], 'border': `1px solid ${buttonColors[i]}`, 'border-right': `0.4rem solid ${buttonColors[i]}`,'border-radius': '4px', 'background-color': activeAggregation===`${group}~${i}` ? buttonColors[i] : $store.state.isDarkMode ? '#333':'white'}\"\n            @click=\"handleOrigDest(group,i)\") {{ element.title }}\n\n        .panel-item\n          p.ui-label {{ $t('maxHeight') }}: {{ vizDetails.maxHeight }}\n          b-slider.ui-slider(v-model=\"vizDetails.maxHeight\"\n            size=\"is-small\"\n            :min=\"0\" :max=\"250\" :step=\"5\"\n            :duration=\"0\" :dotSize=\"12\"\n            :tooltip=\"false\"\n          )\n\n          p.ui-label Hex Radius: {{ vizDetails.radius }}\n          b-slider.ui-slider(v-model=\"vizDetails.radius\"\n            size=\"is-small\"\n            :min=\"50\" :max=\"1000\" :step=\"5\"\n            :duration=\"0\" :dotSize=\"12\"\n            :tooltip=\"false\"\n          )\n\n  .message(v-if=\"!thumbnail && myState.statusMessage\")\n    p.status-message {{ myState.statusMessage }}\n\n</template>\n\n<script lang=\"ts\">\nconst i18n = {\n  messages: {\n    en: {\n      loading: 'Loading data...',\n      sorting: 'Sorting into bins...',\n      aggregate: 'Summary',\n      maxHeight: '3D Height',\n      showDetails: 'Show Details',\n      selection: 'Selection',\n      areas: 'Areas',\n      count: 'Count',\n    },\n    de: {\n      loading: 'Dateien laden...',\n      sorting: 'Sortieren...',\n      aggregate: 'Daten',\n      maxHeight: '3-D Höhe',\n      showDetails: 'Details anzeigen',\n      selection: 'Ausgewählt',\n      areas: 'Orte',\n      count: 'Anzahl',\n    },\n  },\n}\nimport { defineComponent } from 'vue'\nimport type { PropType } from 'vue'\n\nimport { ToggleButton } from 'vue-js-toggle-button'\nimport YAML from 'yaml'\n\nimport util from '@/js/util'\nimport globalStore from '@/store'\nimport { REACT_VIEW_HANDLES } from '@/Globals'\n\nimport HTTPFileSystem from '@/js/HTTPFileSystem'\n\nimport CSVParserWorker from './CsvGzipParser.worker.ts?worker'\nimport CollapsiblePanel from '@/components/CollapsiblePanel.vue'\nimport DrawingTool from '@/components/DrawingTool/DrawingTool.vue'\nimport ZoomButtons from '@/components/ZoomButtons.vue'\nimport XyHexDeckMap from './XyHexLayer'\n\nimport {\n  ColorScheme,\n  FileSystem,\n  LegendItem,\n  LegendItemType,\n  FileSystemConfig,\n  VisualizationPlugin,\n  Status,\n} from '@/Globals'\n\ninterface Aggregations {\n  [heading: string]: {\n    title: string\n    x: string\n    y: string\n  }[]\n}\n\ninterface VizDetail {\n  title: string\n  description?: string\n  file: string\n  projection: any\n  thumbnail?: string\n  elements?: string\n  aggregations: Aggregations\n  radius: number\n  maxHeight: number\n  center: any\n  zoom: number\n  mapIsIndependent?: boolean\n}\n\nconst MyComponent = defineComponent({\n  name: 'XyHexagonsPlugin',\n  i18n,\n  components: {\n    CollapsiblePanel,\n    DrawingTool,\n    XyHexDeckMap,\n    ToggleButton,\n    ZoomButtons,\n  },\n  props: {\n    root: { type: String, required: true },\n    subfolder: { type: String, required: true },\n    yamlConfig: String,\n    config: Object,\n    thumbnail: Boolean,\n  },\n  data: () => {\n    const colorRamps = ['bathymetry', 'par', 'chlorophyll', 'magma']\n    return {\n      id: `id-${Math.floor(1e12 * Math.random())}` as any,\n      standaloneYAMLconfig: {\n        title: '',\n        description: '',\n        file: '',\n        projection: '',\n        thumbnail: '',\n        aggregations: {},\n        radius: 250,\n        maxHeight: 0,\n        center: null as any,\n        zoom: 9,\n        mapIsIndependent: false,\n      },\n      YAMLrequirementsXY: { file: '', aggregations: {} },\n      colorRamps,\n      buttonColors: ['#5E8AAE', '#BF7230', '#269367', '#9C439C'],\n      aggregations: {} as Aggregations,\n      columnLookup: [] as number[],\n      gzipWorker: null as Worker | null,\n      colorRamp: colorRamps[0],\n      globalState: globalStore.state,\n      vizDetails: {\n        title: '',\n        description: '',\n        file: '',\n        projection: '',\n        thumbnail: '',\n        aggregations: {},\n        radius: 250,\n        maxHeight: 0,\n        center: null as any,\n        zoom: 9,\n      } as VizDetail,\n      myState: {\n        statusMessage: '',\n        subfolder: '',\n        yamlConfig: '',\n        thumbnail: false,\n      },\n      rowCache: {} as {\n        [id: string]: { raw: Float32Array; length: number; coordColumns: number[] }\n      },\n      requests: { raw: new Float32Array(0), length: 0 } as { raw: Float32Array; length: number },\n      highlightedTrips: [] as any[],\n      searchTerm: '',\n      searchEnabled: false,\n      isLoaded: false,\n      activeAggregation: '',\n      isHighlightingZone: false,\n      multiSelectedHexagons: {} as { [index: string]: any[] },\n      thumbnailUrl: \"url('assets/thumbnail.jpg') no-repeat;\",\n      hexStats: null as null | {\n        rows: number\n        numHexagons: number\n        selectedHexagonIds: any[]\n      },\n      resizer: null as ResizeObserver | null,\n    }\n  },\n  computed: {\n    fileApi(): HTTPFileSystem {\n      return new HTTPFileSystem(this.fileSystem, globalStore)\n    },\n    fileSystem(): FileSystemConfig {\n      const svnProject: FileSystemConfig[] = this.$store.state.svnProjects.filter(\n        (a: FileSystemConfig) => a.slug === this.root\n      )\n      if (svnProject.length === 0) {\n        console.log('no such project')\n        throw Error\n      }\n      return svnProject[0]\n    },\n\n    urlThumbnail(): any {\n      return this.thumbnailUrl\n    },\n\n    buttonLabel(): string {\n      const [group, offset] = this.activeAggregation.split('~') as any[]\n      return this.aggregations[group][offset].title\n    },\n    extrudeTowers(): boolean {\n      return this.vizDetails.maxHeight > 0\n    },\n\n    mapProps(): any {\n      return {\n        viewId: this.id,\n        colorRamp: this.colorRamp,\n        coverage: 0.65,\n        dark: this.$store.state.isDarkMode,\n        data: this.requests,\n        extrude: this.extrudeTowers,\n        highlights: this.highlightedTrips,\n        mapIsIndependent: this.vizDetails.mapIsIndependent,\n        maxHeight: this.vizDetails.maxHeight,\n        metric: this.buttonLabel,\n        radius: this.vizDetails.radius,\n        selectedHexStats: this.hexStats,\n        upperPercentile: 100,\n        onClick: this.handleClick,\n      }\n    },\n    textColor(): any {\n      const lightmode = {\n        text: '#3498db',\n        bg: '#eeeef480',\n      }\n\n      const darkmode = {\n        text: 'white',\n        bg: '#181518aa',\n      }\n\n      return this.$store.state.colorScheme === ColorScheme.DarkMode ? darkmode : lightmode\n    },\n  },\n  watch: {\n    extrudeTowers() {\n      if (this.extrudeTowers && this.globalState.viewState.pitch == 0) {\n        globalStore.commit(\n          'setMapCamera',\n          Object.assign({}, this.globalState.viewState, { pitch: 10 })\n        )\n      }\n    },\n    '$store.state.viewState'() {\n      if (this.vizDetails.mapIsIndependent) return\n      if (REACT_VIEW_HANDLES[this.id]) REACT_VIEW_HANDLES[this.id]()\n    },\n  },\n  methods: {\n    handleClick(target: any, event: any) {\n      console.log({ target, event })\n      if (!target.layer) this.handleEmptyClick()\n      else this.handleHexClick(target, event)\n    },\n\n    handleEmptyClick() {\n      this.flipViewToShowInvertedData({})\n    },\n\n    handleHexClick(pickedObject: any, event: any) {\n      if (!event.srcEvent.shiftKey) {\n        this.multiSelectedHexagons = {}\n        this.hexStats = null\n        this.flipViewToShowInvertedData(pickedObject)\n        return\n      }\n\n      // SHIFT!!\n      const index = pickedObject?.object?.index\n      if (index !== undefined) {\n        if (index in this.multiSelectedHexagons) {\n          delete this.multiSelectedHexagons[index]\n        } else {\n          this.multiSelectedHexagons[index] = pickedObject.object.points\n        }\n        this.hexStats = this.selectedHexagonStatistics()\n      }\n    },\n\n    flipViewToShowInvertedData(pickedObject: any) {\n      if (this.isHighlightingZone) {\n        // force highlight off if user clicked on a second hex\n        this.isHighlightingZone = false\n      } else if (!pickedObject.object) {\n        // force highlight off if user clicked away\n        this.isHighlightingZone = false\n      } else {\n        this.isHighlightingZone = true\n      }\n\n      const parts = this.activeAggregation.split('~') // an unlikely unicode\n\n      let suffix = 0\n      let revSuffix = 0\n\n      // set up the hexagons\n      if (!this.isHighlightingZone) {\n        // reset the view\n        this.hexStats = null\n        this.multiSelectedHexagons = {}\n        this.handleOrigDest(parts[0], parseInt(parts[1]))\n      } else {\n        // select the anti-view\n        suffix = parseInt(parts[1])\n        revSuffix = suffix % 2 ? suffix - 1 : suffix + 1\n\n        const origKey = `${parts[0]}${suffix}`\n        const origArray = this.rowCache[origKey]\n\n        const key = `${parts[0]}${revSuffix}`\n        const inverseArray = this.rowCache[key]\n\n        const arcFilteredRows: any = []\n\n        for (const row of pickedObject.object.points) {\n          const zoffset = row.index * 2\n          const coords = [inverseArray.raw[zoffset], inverseArray.raw[zoffset + 1]]\n\n          arcFilteredRows.push([\n            // from\n            [origArray.raw[zoffset], origArray.raw[zoffset + 1]],\n            // to\n            coords,\n          ])\n          this.highlightedTrips = arcFilteredRows\n        }\n\n        if (this.hexStats) this.hexStats.selectedHexagonIds = []\n        this.multiSelectedHexagons = {}\n\n        this.colorRamp = this.colorRamps[revSuffix]\n      }\n\n      // set up the connecting arc-lines\n      if (!this.isHighlightingZone) {\n        this.highlightedTrips = []\n      } else {\n        // this.highlightedTrips = arcFilteredRows\n      }\n    },\n\n    async handleOrigDest(groupName: string, number: number) {\n      const cacheKey = groupName + number\n\n      this.hexStats = null\n      this.multiSelectedHexagons = {}\n\n      // const xytitle = this.aggregations[groupName][number]\n      // const x = this.columnLookup.indexOf(xytitle.x)\n      // const y = this.columnLookup.indexOf(xytitle.y)\n\n      this.highlightedTrips = []\n      this.activeAggregation = `${groupName}~${number}`\n\n      // get element offsets in data array\n      // const col = this.aggregations[item]\n      // this.whichCoords = { x, y }\n\n      // this.requests = this.rawRequests.map(r => [r[x], r[y]]).filter(z => z[0] && z[1])\n      // this.requests = this.rawRequests\n      this.requests = this.rowCache[cacheKey]\n      this.colorRamp = this.colorRamps[number]\n    },\n\n    async solveProjection() {\n      if (this.thumbnail) return\n\n      console.log('WHAT PROJECTION:')\n\n      try {\n        const text = await this.fileApi.getFileText(\n          this.myState.subfolder + '/' + this.myState.yamlConfig\n        )\n        this.vizDetails = YAML.parse(text)\n      } catch (e) {\n        console.error(e)\n      }\n    },\n\n    async getVizDetails() {\n      if (this.config) {\n        this.validateYAML()\n        this.vizDetails = Object.assign({}, this.config) as VizDetail\n        this.setRadiusAndHeight()\n        return\n      }\n\n      const hasYaml = new RegExp('.*(yml|yaml)$').test(this.myState.yamlConfig)\n\n      if (hasYaml) {\n        await this.loadStandaloneYAMLConfig()\n      } else {\n        this.loadOutputTripsConfig()\n      }\n    },\n\n    loadOutputTripsConfig() {\n      let projection = 'EPSG:31468' // 'EPSG:25832', // 'EPSG:31468', // TODO: fix\n      if (!this.myState.thumbnail) {\n        projection = prompt('Enter projection: e.g. \"EPSG:31468\"') || 'EPSG:31468'\n        if (!!parseInt(projection, 10)) projection = 'EPSG:' + projection\n      }\n\n      this.vizDetails = {\n        title: 'Output Trips',\n        description: this.myState.yamlConfig,\n        file: this.myState.yamlConfig,\n        projection,\n        aggregations: {\n          'Trip Summary': [\n            { title: 'Origins', x: 'start_x', y: 'start_y' },\n            { title: 'Destinations', x: 'end_x', y: 'end_y' },\n          ],\n        },\n        radius: this.vizDetails.radius,\n        maxHeight: this.vizDetails.maxHeight,\n        center: this.vizDetails.center,\n        zoom: this.vizDetails.zoom,\n      }\n      this.$emit('title', this.vizDetails.title)\n      // this.solveProjection()\n      return\n    },\n\n    setRadiusAndHeight() {\n      if (!this.vizDetails.radius) this.vizDetails.radius = 250\n\n      if (!this.vizDetails.maxHeight) this.vizDetails.maxHeight = 0\n    },\n\n    async loadStandaloneYAMLConfig() {\n      try {\n        // might be a project config:\n        const filename =\n          this.myState.yamlConfig.indexOf('/') > -1\n            ? this.myState.yamlConfig\n            : this.myState.subfolder + '/' + this.myState.yamlConfig\n\n        const text = await this.fileApi.getFileText(filename)\n        this.standaloneYAMLconfig = Object.assign({}, YAML.parse(text))\n        this.validateYAML()\n        this.setVizDetails()\n      } catch (err) {\n        const e = err as any\n        console.log('failed')\n\n        this.$store.commit('setStatus', {\n          type: Status.ERROR,\n          msg: `File not found`,\n          desc: `Could not find: ${this.myState.subfolder}/${this.myState.yamlConfig}`,\n        })\n      }\n    },\n\n    validateYAML() {\n      console.log('in yaml validation 2')\n\n      const hasYaml = new RegExp('.*(yml|yaml)$').test(this.myState.yamlConfig)\n      let configuration = {} as any\n\n      if (hasYaml) {\n        console.log('has yaml')\n        configuration = this.standaloneYAMLconfig\n      } else {\n        console.log('no yaml')\n        configuration = this.config\n      }\n\n      for (const key in this.YAMLrequirementsXY) {\n        if (!(key in configuration)) {\n          this.$store.commit('setStatus', {\n            type: Status.ERROR,\n            msg: `${this.yamlConfig}: missing required key: ${key}`,\n            desc: 'Check this.YAMLrequirementsXY for required keys',\n          })\n        }\n      }\n\n      if (configuration.radius == 0) {\n        this.$store.commit('setStatus', {\n          type: Status.WARNING,\n          msg: `Radius set to zero`,\n          desc: 'Radius can not be zero, preset value used instead. ',\n        })\n      }\n\n      if (configuration.zoom < 5 || configuration.zoom > 20) {\n        this.$store.commit('setStatus', {\n          type: Status.WARNING,\n          msg: `Zoom is out of the recommended range `,\n          desc: 'Zoom levels should be between 5 and 20. ',\n        })\n      }\n    },\n\n    setVizDetails() {\n      this.vizDetails = Object.assign({}, this.vizDetails, this.standaloneYAMLconfig)\n\n      this.setRadiusAndHeight()\n\n      const t = this.vizDetails.title ? this.vizDetails.title : 'Hex Aggregation'\n      this.$emit('title', t)\n    },\n\n    async buildThumbnail() {\n      if (this.thumbnail && this.vizDetails.thumbnail) {\n        try {\n          const blob = await this.fileApi.getFileBlob(\n            this.myState.subfolder + '/' + this.vizDetails.thumbnail\n          )\n          const buffer = await blob.arrayBuffer()\n          const base64 = util.arrayBufferToBase64(buffer)\n          if (base64)\n            this.thumbnailUrl = `center / cover no-repeat url(data:image/png;base64,${base64})`\n        } catch (e) {\n          console.error(e)\n        }\n      }\n    },\n    handleShowSelectionButton() {\n      const arrays = Object.values(this.multiSelectedHexagons)\n      let points: any[] = []\n      arrays.map(a => (points = points.concat(a)))\n\n      const pickedObject = { object: { points } }\n      this.flipViewToShowInvertedData(pickedObject)\n    },\n\n    selectedHexagonStatistics(): {\n      rows: number\n      numHexagons: number\n      selectedHexagonIds: any[]\n    } | null {\n      const selectedHexes = Object.keys(this.multiSelectedHexagons).map(a => parseInt(a))\n      if (!selectedHexes.length) return null\n\n      const arrays = Object.values(this.multiSelectedHexagons)\n      const ll = arrays.reduce((a: number, v: any) => a + v.length, 0)\n\n      return { rows: ll, numHexagons: selectedHexes.length, selectedHexagonIds: selectedHexes }\n    },\n\n    async setMapCenter() {\n      const data = Object.values(this.rowCache)[0].raw\n\n      // If user gave us the center, use it\n      if (this.vizDetails.center) {\n        if (typeof this.vizDetails.center == 'string') {\n          this.vizDetails.center = this.vizDetails.center.split(',').map(Number)\n        }\n\n        const view = {\n          longitude: this.vizDetails.center[0],\n          latitude: this.vizDetails.center[1],\n          bearing: 0,\n          pitch: 0,\n          zoom: this.vizDetails.zoom || 10, // use 10 default if we don't have a zoom\n          jump: false, // move the map no matter what\n        }\n\n        // bounce our map\n        if (REACT_VIEW_HANDLES[this.id]) REACT_VIEW_HANDLES[this.id](view)\n\n        // Sets the map to the specified data\n        this.$store.commit('setMapCamera', Object.assign({}, view))\n\n        return\n      }\n\n      // user didn't give us the center, so calculate it\n      if (!data.length) return\n\n      let samples = 0\n      let longitude = 0\n      let latitude = 0\n\n      const numLinks = data.length / 2\n\n      const gap = 512\n      for (let i = 0; i < numLinks; i += gap) {\n        longitude += data[i * 2]\n        latitude += data[i * 2 + 1]\n        samples++\n      }\n\n      longitude = longitude / samples\n      latitude = latitude / samples\n\n      const currentView = this.$store.state.viewState\n\n      if (longitude && latitude) {\n        this.$store.commit('setMapCamera', {\n          longitude,\n          latitude,\n          bearing: currentView.bearing,\n          pitch: currentView.pitch,\n          zoom: this.vizDetails.zoom || currentView.zoom,\n          jump: false,\n        })\n      }\n    },\n\n    setupLogoMover() {\n      this.resizer = new ResizeObserver(this.moveLogo)\n      const deckmap = document.getElementById(`id-${this.id}`) as HTMLElement\n      this.resizer.observe(deckmap)\n    },\n\n    moveLogo() {\n      const deckmap = document.getElementById(`id-${this.id}`) as HTMLElement\n      const logo = deckmap?.querySelector('.mapboxgl-ctrl-bottom-left') as HTMLElement\n      if (logo) {\n        const right = deckmap.clientWidth > 640 ? '280px' : '36px'\n        logo.style.right = right\n      }\n    },\n\n    async parseCSVFile(filename: string) {\n      this.myState.statusMessage = 'Loading file...'\n\n      // get the raw unzipped arraybuffer\n      this.gzipWorker = new CSVParserWorker()\n\n      this.gzipWorker.onmessage = async (buffer: MessageEvent) => {\n        if (buffer.data.status) {\n          this.myState.statusMessage = buffer.data.status\n        } else if (buffer.data.error) {\n          this.myState.statusMessage = buffer.data.error\n          this.$store.commit('setStatus', {\n            type: Status.ERROR,\n            msg: `Loading Error`,\n            desc: 'Error loading: ${this.myState.subfolder}/${this.vizDetails.file}',\n          })\n        } else {\n          const { rowCache, columnLookup } = buffer.data\n          if (this.gzipWorker) this.gzipWorker.terminate()\n          this.dataIsLoaded({ rowCache, columnLookup })\n        }\n      }\n\n      this.gzipWorker.postMessage({\n        filepath: filename,\n        fileSystem: this.fileSystem,\n        aggregations: this.vizDetails.aggregations,\n        projection: this.vizDetails.projection,\n      })\n    },\n\n    dataIsLoaded({ rowCache, columnLookup }: any) {\n      this.columnLookup = columnLookup\n      this.rowCache = rowCache\n\n      const agg = this.activeAggregation.replaceAll('~', '')\n      this.requests = this.rowCache[agg]\n\n      this.setMapCenter()\n      this.moveLogo()\n      this.myState.statusMessage = ''\n    },\n\n    async loadFiles() {\n      let dataArray: any = []\n      if (!this.fileApi) return { dataArray }\n\n      try {\n        let filename = `${this.myState.subfolder}/${this.vizDetails.file}`\n        await this.parseCSVFile(filename)\n      } catch (e) {\n        console.error(e)\n        this.myState.statusMessage = '' + e\n        this.$store.commit('setStatus', {\n          type: Status.ERROR,\n          msg: `Loading/Parsing Error`,\n          desc: 'Error loading/parsing: ${this.myState.subfolder}/${this.vizDetails.file}',\n        })\n      }\n    },\n  },\n  async mounted() {\n    this.$store.commit('setFullScreen', !this.thumbnail)\n\n    this.myState.thumbnail = this.thumbnail\n    this.myState.yamlConfig = this.yamlConfig || ''\n    this.myState.subfolder = this.subfolder\n\n    await this.getVizDetails()\n\n    if (this.thumbnail) return\n\n    this.setupLogoMover()\n\n    this.myState.statusMessage = `${this.$i18n.t('loading')}`\n    this.aggregations = this.vizDetails.aggregations\n\n    // console.log('loading files')\n    await this.loadFiles()\n\n    // this.mapState.center = this.findCenter(this.rawRequests)\n\n    this.buildThumbnail()\n\n    this.isLoaded = true\n    this.handleOrigDest(Object.keys(this.aggregations)[0], 0) // show first data\n  },\n\n  beforeDestroy() {\n    // MUST erase the React view handle to prevent gigantic memory leak!\n    REACT_VIEW_HANDLES[this.id] = undefined\n    delete REACT_VIEW_HANDLES[this.id]\n\n    try {\n      if (this.gzipWorker) {\n        this.gzipWorker.terminate()\n      }\n    } catch (e) {\n      console.warn(e)\n    }\n\n    this.$store.commit('setFullScreen', false)\n  },\n})\n\nexport default MyComponent\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles.scss';\n\n.xy-hexagons {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  min-height: $thumbnailHeight;\n  background: url('assets/thumbnail.jpg') center / cover no-repeat;\n  z-index: -1;\n}\n\n.xy-hexagons.hide-thumbnail {\n  background: none;\n  z-index: 0;\n}\n\n.message {\n  z-index: 5;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  box-shadow: 0px 2px 10px #22222222;\n  display: flex;\n  flex-direction: row;\n  margin: auto auto 0 0;\n  background-color: var(--bgPanel);\n  padding: 0.5rem 1.5rem;\n\n  a {\n    color: white;\n    text-decoration: none;\n\n    &.router-link-exact-active {\n      color: white;\n    }\n  }\n\n  p {\n    font-size: 1.2rem;\n    line-height: 1.5rem;\n    font-weight: normal;\n    color: var(--textFancy);\n  }\n}\n\n.ui-slider {\n  padding: 0 0;\n  margin: 0.2rem 0 0.6rem 0;\n  min-width: 7rem;\n}\n\n.status-message {\n  font-size: 1.5rem;\n  line-height: 1.75rem;\n  font-weight: bold;\n}\n\n.big {\n  padding: 0.5rem 0;\n  font-size: 1.5rem;\n  line-height: 1.7rem;\n  font-weight: bold;\n}\n\n.left-side {\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.8rem;\n  pointer-events: auto;\n  margin: 0 0 0 0;\n}\n\n.control-panel {\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  flex-direction: row;\n  font-size: 0.8rem;\n  margin: 0 0 0.5rem 0.5rem;\n  pointer-events: auto;\n  background-color: var(--bgPanel);\n  padding: 0.5rem 0.5rem;\n  filter: drop-shadow(0px 2px 4px #22222233);\n}\n\n.is-dashboard {\n  position: static;\n  margin: 0 0;\n  padding: 0.25rem 0 0 0;\n  filter: unset;\n  background-color: unset;\n}\n\n.hex-layer {\n  pointer-events: auto;\n}\n\n.ui-label {\n  font-size: 0.8rem;\n  font-weight: bold;\n}\n\n.tooltip {\n  padding: 5rem 5rem;\n  background-color: #ccc;\n}\n\n.panel-items {\n  margin: 0.5rem 0.5rem;\n}\n\n.panel-item {\n  display: flex;\n  flex-direction: column;\n  margin-right: 1rem;\n  margin-left: 0.25rem;\n}\n\n.right {\n  margin-left: auto;\n}\n\ninput {\n  border: none;\n  background-color: #235;\n  color: #ccc;\n}\n\n.row {\n  display: 'grid';\n  grid-template-columns: 'auto 1fr';\n}\n\n.drawing-tool {\n  position: absolute;\n  top: 0;\n  right: 0;\n  pointer-events: none;\n}\n\n@media only screen and (max-width: 640px) {\n  .message {\n    padding: 0.5rem 0.5rem;\n  }\n\n  .right-side {\n    font-size: 0.7rem;\n  }\n\n  .big {\n    padding: 0 0rem;\n    margin-top: 0.5rem;\n    font-size: 1.3rem;\n    line-height: 2rem;\n  }\n}\n</style>\n"],"names":["ColumnGeometry","Geometry","props","id","uid","indices","attributes","tesselateColumn","radius","height","nradial","vertices","log","v","modifyPolygonWindingDirection","WINDING","isExtruded","vertsAroundEdge","numVertices","stepAngle","positions","normals","i","j","a","vertexIndex","sin","cos","k","index","vs","fs","DEFAULT_COLOR","defaultProps","x","ColumnLayer","Layer","gl","transpileToGLSL100","isWebGL2","defines","useDerivatives","hasFeature","FEATURES","project32","phongLighting","gouraudLighting","picking","params","oldProps","changeFlags","regenerateModels","_this$state$model","diskResolution","hasThinkness","geometry","meanVertexDistance","p","d","Model","extruded","stroked","uniforms","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","radiusUnits","elevationScale","filled","wireframe","offset","coverage","angle","model","fillVertexCount","wireframeVertexCount","edgeDistance","UNIT","_defineProperty","AGGREGATION_OPERATION","sumReducer","accu","cur","maxReducer","minReducer","getMean","pts","accessor","filtered","getSum","getMax","getMin","getValueFunc","aggregation","context","op","wrapAccessor","pt","wrapGetValueFunc","getValue","defaultColorRange","filterProps","filterKeys","filteredProps","key","AggregationLayer","CompositeLayer","args","dimensions","opts","shaders","changedAttributes","viewport","mousePosition","cssToDeviceRatio","updateOpts","compareAll","dimension","ignoreProps","dataProps","accessors","updateTriggersChanged","compareProps","name","isObjectEmpty","AttributeManager","obj","isEmpty","getScale","domain","range","scaleFunction","scale","getQuantizeScale","value","quantizeScale","getLinearScale","linearScale","getQuantileScale","sortedDomain","ascending","n","thresholds","threshold","thresholdsScale","b","fraction","domainLength","domainFraction","lowIndex","low","high","bisectRight","lo","hi","mid","ordinalScale","domainMap","getOrdinalScale","uniqueDomain","domainRange","step","idx","clampIdx","notNullOrUndefined","unique","values","results","getTruthyValues","data","valueAccessor","getQuantileDomain","getOrdinalDomain","clamp","min","max","getScaleFunctionByScaleType","scaleType","defaultGetValue","points","MAX_32_BIT_FLOAT","defaultGetPoints","bin","defaultGetIndex","BinSorter","bins","getPoints","getIndex","filterData","hasFilter","binCount","aggregatedBins","binIndex","filteredPoints","percentileRange","len","lower","upper","lowerIdx","upperIdx","binMap","maxCount","maxValue","minValue","totalCount","idxRange","indexEdge","nop","dimensionSteps","defaultDimensions","defaultGetCellSize","CPUAggregator","aggregationParams","reprojectNeeded","aggregationDirty","f","updateObject","result","weight","pickingInfo","getBins","getDomain","getScaleFunc","nullValue","dimensionStep","item","updaters","needUpdate","_updateTriggers","updateTriggers","prop","updateTrigger","fromProp","dimensionUpdater","sortedBins","lowerPercentile","upperPercentile","valueDomain","onSet","dimensionRange","dimensionDomain","scaleFunc","cell","cv","info","isPicked","object","binInfo","dimensionKey","thirdPi","angles","pointX","pointY","hexbin","x0","y0","x1","y1","y","r","dx","dy","binsById","px","point","py","pj","pi","py1","px1","pi2","pj2","px2","py2","hexagon","centers","fragment","_","pointToHexbin","centerLngLat","getPointsCenter","radiusCommon","getRadiusInCommon","screenPoints","iterable","objectInfo","createIterable","size","posIndex","position","hex","minX","minY","maxX","maxY","center","unitsPerMeter","HexagonLayer","cpuAggregator","aggregatorState","hexagonVertices","vertex0","vertex3","centroid","centroidFlat","metersPerUnit","vt","vtFlat","material","transitions","SubLayerClass","INITIAL_VIEW","viewId","colorRamp","dark","extrude","highlights","mapIsIndependent","maxHeight","metric","selectedHexStats","onClick","viewState","setViewState","useState","REACT_VIEW_HANDLES","view","globalStore","handleViewState","colors","colormap","c","getTooltip","lat","lng","count","handleClick","target","event","rows","row","layers","ArcLayer","React","DeckGL","e","StaticMap","MAPBOX_TOKEN","i18n","MyComponent","defineComponent","CollapsiblePanel","DrawingTool","XyHexDeckMap","ToggleButton","ZoomButtons","colorRamps","HTTPFileSystem","svnProject","group","lightmode","darkmode","ColorScheme","pickedObject","_a","parts","suffix","revSuffix","origKey","origArray","inverseArray","arcFilteredRows","zoffset","coords","groupName","number","cacheKey","text","YAML","projection","filename","Status","hasYaml","configuration","t","buffer","base64","util","arrays","selectedHexes","samples","longitude","latitude","numLinks","gap","currentView","deckmap","logo","right","CSVParserWorker","rowCache","columnLookup","agg","dataArray"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}